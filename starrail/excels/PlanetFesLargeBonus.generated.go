package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesLargeBonus struct {
	ActivityRewardID json.Number            `json:"ActivityRewardID"`
	BaseIncome       json.Number            `json:"BaseIncome"`
	ComboIncome      json.Number            `json:"ComboIncome"`
	Duration         json.Number            `json:"Duration"`
	ID               json.Number            `json:"ID"`
	TapCD            json.Number            `json:"TapCD"`
	TapIncome        map[string]json.Number `json:"TapIncome"`
	TimePerSecond    json.Number            `json:"TimePerSecond"`
	UnlockIDList     []interface{}          `json:"UnlockIDList"`
}
type PlanetFesLargeBonusAccessor struct {
	_data []PlanetFesLargeBonus
}

// LoadData retrieves the data. Must be called before PlanetFesLargeBonus.GroupData
func (a *PlanetFesLargeBonusAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesLargeBonus.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesLargeBonusAccessor) Raw() ([]PlanetFesLargeBonus, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesLargeBonus{}, err
		}
	}
	return a._data, nil
}
