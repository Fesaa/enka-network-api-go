package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type CutsceneProp struct {
	PropID                string `json:"PropID"`
	PropModelPath         string `json:"PropModelPath"`
	ResidentEffectKey     string `json:"ResidentEffectKey"`
	ResidentPossessionKey string `json:"ResidentPossessionKey"`
}
type CutscenePropAccessor struct {
	_data              []CutsceneProp
	_dataPropID        map[string]CutsceneProp
	_dataPropModelPath map[string]CutsceneProp
}

// LoadData retrieves the data. Must be called before CutsceneProp.GroupData
func (a *CutscenePropAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/CutsceneProp.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *CutscenePropAccessor) Raw() ([]CutsceneProp, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []CutsceneProp{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with CutscenePropAccessor.LoadData to preload everything
func (a *CutscenePropAccessor) GroupData() {
	a._dataPropID = map[string]CutsceneProp{}
	a._dataPropModelPath = map[string]CutsceneProp{}
	for _, d := range a._data {
		a._dataPropID[d.PropID] = d
		a._dataPropModelPath[d.PropModelPath] = d
	}
}

// ByPropID returns the CutsceneProp uniquely identified by PropID
//
// Error is only non-nil if the source errors out
func (a *CutscenePropAccessor) ByPropID(identifier string) (CutsceneProp, error) {
	if a._dataPropID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return CutsceneProp{}, err
			}
		}
		a.GroupData()
	}
	return a._dataPropID[identifier], nil
}

// ByPropModelPath returns the CutsceneProp uniquely identified by PropModelPath
//
// Error is only non-nil if the source errors out
func (a *CutscenePropAccessor) ByPropModelPath(identifier string) (CutsceneProp, error) {
	if a._dataPropModelPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return CutsceneProp{}, err
			}
		}
		a.GroupData()
	}
	return a._dataPropModelPath[identifier], nil
}
