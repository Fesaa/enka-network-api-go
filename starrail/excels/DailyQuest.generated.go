package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type DailyQuest struct {
	DailyID   json.Number   `json:"DailyID"`
	IsDelete  bool          `json:"IsDelete"`
	MaxLevel  json.Number   `json:"MaxLevel"`
	MinLevel  json.Number   `json:"MinLevel"`
	QuestList []json.Number `json:"QuestList"`
}
type DailyQuestAccessor struct {
	_data []DailyQuest
}

// LoadData retrieves the data. Must be called before DailyQuest.GroupData
func (a *DailyQuestAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/DailyQuest.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *DailyQuestAccessor) Raw() ([]DailyQuest, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []DailyQuest{}, err
		}
	}
	return a._data, nil
}
