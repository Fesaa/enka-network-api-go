package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type EvolveBuildStageConfig struct {
	BuffTextFormat      map[string]json.Number           `json:"BuffTextFormat"`
	Difficulty          json.Number                      `json:"Difficulty"`
	FirstWinReward      []json.Number                    `json:"FirstWinReward"`
	GearRecommendList   []json.Number                    `json:"GearRecommendList"`
	InitialWeapon       []json.Number                    `json:"InitialWeapon"`
	IntroID             json.Number                      `json:"IntroID"`
	Name                map[string]json.Number           `json:"Name"`
	RankList            []EvolveBuildStageConfigRankList `json:"RankList"`
	RecommendList       []map[string]json.Number         `json:"RecommendList"`
	Season              string                           `json:"Season"`
	StageMergedID       json.Number                      `json:"StageMergedID"`
	StagePeriod1        []json.Number                    `json:"StagePeriod1"`
	StagePeriod2        []json.Number                    `json:"StagePeriod2"`
	StagePeriod3        []json.Number                    `json:"StagePeriod3"`
	StagePeriod4        []json.Number                    `json:"StagePeriod4"`
	TeamBonusIconPath   string                           `json:"TeamBonusIconPath"`
	TeamBonusMazeBuffID json.Number                      `json:"TeamBonusMazeBuffID"`
	TeamBonusShortDesc  map[string]json.Number           `json:"TeamBonusShortDesc"`
	TrialAvatar         []json.Number                    `json:"TrialAvatar"`
	UnlockQuest         json.Number                      `json:"UnlockQuest"`
	WeaponSelectable    bool                             `json:"WeaponSelectable"`
}
type EvolveBuildStageConfigRankList struct {
	DNPHCJEBIKB json.Number `json:"DNPHCJEBIKB"`
	MJJBNDAKOIF string      `json:"MJJBNDAKOIF"`
}
type EvolveBuildStageConfigAccessor struct {
	_data []EvolveBuildStageConfig
}

// LoadData retrieves the data. Must be called before EvolveBuildStageConfig.GroupData
func (a *EvolveBuildStageConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/EvolveBuildStageConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *EvolveBuildStageConfigAccessor) Raw() ([]EvolveBuildStageConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []EvolveBuildStageConfig{}, err
		}
	}
	return a._data, nil
}
