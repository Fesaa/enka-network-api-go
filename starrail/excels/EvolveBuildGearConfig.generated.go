package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type EvolveBuildGearConfig struct {
	DynamicIndexList []json.Number `json:"DynamicIndexList"`
	GearID           json.Number   `json:"GearID"`
	IndexList        []json.Number `json:"IndexList"`
	Level            json.Number   `json:"Level"`
	MazeBuffID       json.Number   `json:"MazeBuffID"`
	SimpIndexList    []json.Number `json:"SimpIndexList"`
	Type             string        `json:"Type"`
}
type EvolveBuildGearConfigAccessor struct {
	_data []EvolveBuildGearConfig
}

// LoadData retrieves the data. Must be called before EvolveBuildGearConfig.GroupData
func (a *EvolveBuildGearConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/EvolveBuildGearConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *EvolveBuildGearConfigAccessor) Raw() ([]EvolveBuildGearConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []EvolveBuildGearConfig{}, err
		}
	}
	return a._data, nil
}
