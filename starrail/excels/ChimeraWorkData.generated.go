package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ChimeraWorkData struct {
	Atk        json.Number `json:"Atk"`
	DisplayID  json.Number `json:"DisplayID"`
	Hp         json.Number `json:"Hp"`
	JsonConfig string      `json:"JsonConfig"`
	Tag        string      `json:"Tag"`
	WorkID     json.Number `json:"WorkID"`
	WorkIcon   string      `json:"WorkIcon"`
	WorkPrefab string      `json:"WorkPrefab"`
	WorkValue  json.Number `json:"WorkValue"`
}
type ChimeraWorkDataAccessor struct {
	_data []ChimeraWorkData
}

// LoadData retrieves the data. Must be called before ChimeraWorkData.GroupData
func (a *ChimeraWorkDataAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ChimeraWorkData.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ChimeraWorkDataAccessor) Raw() ([]ChimeraWorkData, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ChimeraWorkData{}, err
		}
	}
	return a._data, nil
}
