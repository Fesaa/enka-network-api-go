package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesLevel struct {
	BasicBuffIDList []json.Number            `json:"BasicBuffIDList"`
	BuffIDList      []json.Number            `json:"BuffIDList"`
	CostNum         PlanetFesLevelCostNum    `json:"CostNum"`
	Description     map[string]json.Number   `json:"Description"`
	GrantGold       PlanetFesLevelGrantGold  `json:"GrantGold"`
	GrantItemList   []map[string]json.Number `json:"GrantItemList"`
	Level           json.Number              `json:"Level"`
	NewTipsList     []json.Number            `json:"NewTipsList"`
	QuestID         json.Number              `json:"QuestID"`
}
type PlanetFesLevelCostNum struct {
	BaseValue json.Number `json:"base_value"`
	Unit      string      `json:"unit"`
}
type PlanetFesLevelGrantGold struct {
	BaseValue json.Number `json:"base_value"`
	Unit      string      `json:"unit"`
}
type PlanetFesLevelAccessor struct {
	_data []PlanetFesLevel
}

// LoadData retrieves the data. Must be called before PlanetFesLevel.GroupData
func (a *PlanetFesLevelAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesLevel.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesLevelAccessor) Raw() ([]PlanetFesLevel, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesLevel{}, err
		}
	}
	return a._data, nil
}
