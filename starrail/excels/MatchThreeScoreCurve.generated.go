package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type MatchThreeScoreCurve struct {
	AddCurveRatio float64 `json:"AddCurveRatio"`
	AddHigh       float64 `json:"AddHigh"`
	AddLow        float64 `json:"AddLow"`
	CurveID       float64 `json:"CurveID"`
	DelayTime     float64 `json:"DelayTime"`
	PlayerStep    float64 `json:"PlayerStep"`
}
type MatchThreeScoreCurveAccessor struct {
	_data []MatchThreeScoreCurve
}

// LoadData retrieves the data. Must be called before MatchThreeScoreCurve.GroupData
func (a *MatchThreeScoreCurveAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MatchThreeScoreCurve.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MatchThreeScoreCurveAccessor) Raw() ([]MatchThreeScoreCurve, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MatchThreeScoreCurve{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}
