package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MessageContactsConfig struct {
	ContactsCamp  json.Number            `json:"ContactsCamp"`
	ContactsType  json.Number            `json:"ContactsType"`
	ID            json.Number            `json:"ID"`
	IconPath      string                 `json:"IconPath"`
	Name          map[string]json.Number `json:"Name"`
	SignatureText map[string]json.Number `json:"SignatureText"`
}
type MessageContactsConfigAccessor struct {
	_data []MessageContactsConfig
}

// LoadData retrieves the data. Must be called before MessageContactsConfig.GroupData
func (a *MessageContactsConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MessageContactsConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MessageContactsConfigAccessor) Raw() ([]MessageContactsConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MessageContactsConfig{}, err
		}
	}
	return a._data, nil
}
