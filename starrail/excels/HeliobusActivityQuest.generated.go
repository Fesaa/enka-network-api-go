package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type HeliobusActivityQuest struct {
	ActivityModuleID json.Number            `json:"ActivityModuleID"`
	QuestList        []json.Number          `json:"QuestList"`
	QuestTabID       json.Number            `json:"QuestTabID"`
	QuestTabName     map[string]json.Number `json:"QuestTabName"`
	TypeGroupID      json.Number            `json:"TypeGroupID"`
}
type HeliobusActivityQuestAccessor struct {
	_data           []HeliobusActivityQuest
	_dataQuestTabID map[json.Number]HeliobusActivityQuest
}

// LoadData retrieves the data. Must be called before HeliobusActivityQuest.GroupData
func (a *HeliobusActivityQuestAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/HeliobusActivityQuest.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *HeliobusActivityQuestAccessor) Raw() ([]HeliobusActivityQuest, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []HeliobusActivityQuest{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with HeliobusActivityQuestAccessor.LoadData to preload everything
func (a *HeliobusActivityQuestAccessor) GroupData() {
	a._dataQuestTabID = map[json.Number]HeliobusActivityQuest{}
	for _, d := range a._data {
		a._dataQuestTabID[d.QuestTabID] = d
	}
}

// ByQuestTabID returns the HeliobusActivityQuest uniquely identified by QuestTabID
//
// Error is only non-nil if the source errors out
func (a *HeliobusActivityQuestAccessor) ByQuestTabID(identifier json.Number) (HeliobusActivityQuest, error) {
	if a._dataQuestTabID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return HeliobusActivityQuest{}, err
			}
		}
		a.GroupData()
	}
	return a._dataQuestTabID[identifier], nil
}
