package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MatchThreeLevel struct {
	EnvironmentID      []json.Number          `json:"EnvironmentID"`
	GoMissionCondition json.Number            `json:"GoMissionCondition"`
	HPmax              json.Number            `json:"HPmax"`
	LevelDescription   map[string]json.Number `json:"LevelDescription"`
	LevelID            json.Number            `json:"LevelID"`
	LevelImage         string                 `json:"LevelImage"`
	LevelMission       json.Number            `json:"LevelMission"`
	LevelName          map[string]json.Number `json:"LevelName"`
	LoseDesc           map[string]json.Number `json:"LoseDesc"`
	MissionDescription map[string]json.Number `json:"MissionDescription"`
	Mode               json.Number            `json:"Mode"`
	OpponentBirdID     json.Number            `json:"OpponentBirdID"`
	OpponentID         json.Number            `json:"OpponentID"`
	PlayerBirdID       json.Number            `json:"PlayerBirdID"`
	PlayerID           json.Number            `json:"PlayerID"`
	RewardID           json.Number            `json:"RewardID"`
	TurnStep           json.Number            `json:"TurnStep"`
	UnlockID           json.Number            `json:"UnlockID"`
	VSTalkList         []json.Number          `json:"VSTalkList"`
	VictoryDesc        map[string]json.Number `json:"VictoryDesc"`
}
type MatchThreeLevelAccessor struct {
	_data []MatchThreeLevel
}

// LoadData retrieves the data. Must be called before MatchThreeLevel.GroupData
func (a *MatchThreeLevelAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MatchThreeLevel.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MatchThreeLevelAccessor) Raw() ([]MatchThreeLevel, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MatchThreeLevel{}, err
		}
	}
	return a._data, nil
}
