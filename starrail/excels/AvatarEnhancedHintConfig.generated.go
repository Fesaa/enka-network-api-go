package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type AvatarEnhancedHintConfig struct {
	AvatarID        float64   `json:"AvatarID"`
	EnhancedDesc1   hash.Hash `json:"EnhancedDesc1"`
	EnhancedDesc2   hash.Hash `json:"EnhancedDesc2"`
	EnhancedDesc3   hash.Hash `json:"EnhancedDesc3"`
	EnhancedDescNum float64   `json:"EnhancedDescNum"`
	EnhancedID      float64   `json:"EnhancedID"`
	PreviewModuleID float64   `json:"PreviewModuleID"`
	SeasonID        float64   `json:"SeasonID"`
	TrialStageID    float64   `json:"TrialStageID"`
}
type AvatarEnhancedHintConfigAccessor struct {
	_data             []AvatarEnhancedHintConfig
	_dataAvatarID     map[float64]AvatarEnhancedHintConfig
	_dataTrialStageID map[float64]AvatarEnhancedHintConfig
}

// LoadData retrieves the data. Must be called before AvatarEnhancedHintConfig.GroupData
func (a *AvatarEnhancedHintConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarEnhancedHintConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarEnhancedHintConfigAccessor) Raw() ([]AvatarEnhancedHintConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarEnhancedHintConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with AvatarEnhancedHintConfigAccessor.LoadData to preload everything
func (a *AvatarEnhancedHintConfigAccessor) GroupData() {
	a._dataAvatarID = map[float64]AvatarEnhancedHintConfig{}
	a._dataTrialStageID = map[float64]AvatarEnhancedHintConfig{}
	for _, d := range a._data {
		a._dataAvatarID[d.AvatarID] = d
		a._dataTrialStageID[d.TrialStageID] = d
	}
}

// ByAvatarID returns the AvatarEnhancedHintConfig uniquely identified by AvatarID
//
// Error is only non-nil if the source errors out
func (a *AvatarEnhancedHintConfigAccessor) ByAvatarID(identifier float64) (AvatarEnhancedHintConfig, error) {
	if a._dataAvatarID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarEnhancedHintConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarID[identifier], nil
}

// ByTrialStageID returns the AvatarEnhancedHintConfig uniquely identified by TrialStageID
//
// Error is only non-nil if the source errors out
func (a *AvatarEnhancedHintConfigAccessor) ByTrialStageID(identifier float64) (AvatarEnhancedHintConfig, error) {
	if a._dataTrialStageID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarEnhancedHintConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataTrialStageID[identifier], nil
}
