package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type TrainPartyTeam struct {
	GridNum             json.Number            `json:"GridNum"`
	InitialMeetingSkill json.Number            `json:"InitialMeetingSkill"`
	LeaderWorkingBuffID json.Number            `json:"LeaderWorkingBuffID"`
	PassengerList       []json.Number          `json:"PassengerList"`
	TeamID              json.Number            `json:"TeamID"`
	TeamName            map[string]json.Number `json:"TeamName"`
}
type TrainPartyTeamAccessor struct {
	_data []TrainPartyTeam
}

// LoadData retrieves the data. Must be called before TrainPartyTeam.GroupData
func (a *TrainPartyTeamAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainPartyTeam.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainPartyTeamAccessor) Raw() ([]TrainPartyTeam, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainPartyTeam{}, err
		}
	}
	return a._data, nil
}
