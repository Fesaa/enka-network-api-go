package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type TrainPartyMTCategoryConfig struct {
	CategoryDesc      map[string]json.Number `json:"CategoryDesc"`
	CategoryID        json.Number            `json:"CategoryID"`
	CategoryName      map[string]json.Number `json:"CategoryName"`
	CategoryTableName map[string]json.Number `json:"CategoryTableName"`
}
type TrainPartyMTCategoryConfigAccessor struct {
	_data           []TrainPartyMTCategoryConfig
	_dataCategoryID map[json.Number]TrainPartyMTCategoryConfig
}

// LoadData retrieves the data. Must be called before TrainPartyMTCategoryConfig.GroupData
func (a *TrainPartyMTCategoryConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainPartyMTCategoryConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainPartyMTCategoryConfigAccessor) Raw() ([]TrainPartyMTCategoryConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainPartyMTCategoryConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with TrainPartyMTCategoryConfigAccessor.LoadData to preload everything
func (a *TrainPartyMTCategoryConfigAccessor) GroupData() {
	a._dataCategoryID = map[json.Number]TrainPartyMTCategoryConfig{}
	for _, d := range a._data {
		a._dataCategoryID[d.CategoryID] = d
	}
}

// ByCategoryID returns the TrainPartyMTCategoryConfig uniquely identified by CategoryID
//
// Error is only non-nil if the source errors out
func (a *TrainPartyMTCategoryConfigAccessor) ByCategoryID(identifier json.Number) (TrainPartyMTCategoryConfig, error) {
	if a._dataCategoryID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TrainPartyMTCategoryConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCategoryID[identifier], nil
}
