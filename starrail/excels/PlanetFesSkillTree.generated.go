package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesSkillTree struct {
	Icon            string                 `json:"Icon"`
	IsImportant     bool                   `json:"IsImportant"`
	LevelCostList   []json.Number          `json:"LevelCostList"`
	LevelSkillList  []json.Number          `json:"LevelSkillList"`
	MaxLevel        json.Number            `json:"MaxLevel"`
	Name            map[string]json.Number `json:"Name"`
	NextSkillIDList []json.Number          `json:"NextSkillIDList"`
	Phase           json.Number            `json:"Phase"`
	SkillID         json.Number            `json:"SkillID"`
	UnlockIDList    []interface{}          `json:"UnlockIDList"`
}
type PlanetFesSkillTreeAccessor struct {
	_data []PlanetFesSkillTree
}

// LoadData retrieves the data. Must be called before PlanetFesSkillTree.GroupData
func (a *PlanetFesSkillTreeAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesSkillTree.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesSkillTreeAccessor) Raw() ([]PlanetFesSkillTree, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesSkillTree{}, err
		}
	}
	return a._data, nil
}
