package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type PlanetFesBusinessDay struct {
	AvatarEventNum float64   `json:"AvatarEventNum"`
	BusinessDay    float64   `json:"BusinessDay"`
	LargeBonusNum  float64   `json:"LargeBonusNum"`
	LittleBonusNum float64   `json:"LittleBonusNum"`
	MiddleBonusNum float64   `json:"MiddleBonusNum"`
	NaturalDay     float64   `json:"NaturalDay"`
	PamNum         float64   `json:"PamNum"`
	StartText      hash.Hash `json:"StartText"`
}
type PlanetFesBusinessDayAccessor struct {
	_data            []PlanetFesBusinessDay
	_dataBusinessDay map[float64]PlanetFesBusinessDay
}

// LoadData retrieves the data. Must be called before PlanetFesBusinessDay.GroupData
func (a *PlanetFesBusinessDayAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesBusinessDay.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesBusinessDayAccessor) Raw() ([]PlanetFesBusinessDay, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesBusinessDay{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with PlanetFesBusinessDayAccessor.LoadData to preload everything
func (a *PlanetFesBusinessDayAccessor) GroupData() {
	for _, d := range a._data {
		a._dataBusinessDay[d.BusinessDay] = d
	}
}

// ByBusinessDay returns the PlanetFesBusinessDay uniquely identified by BusinessDay
//
// Error is only non-nil if the source errors out
func (a *PlanetFesBusinessDayAccessor) ByBusinessDay(identifier float64) (PlanetFesBusinessDay, error) {
	if a._dataBusinessDay == nil {
		err := a.LoadData()
		if err != nil {
			return PlanetFesBusinessDay{}, err
		}
		a.GroupData()
	}
	return a._dataBusinessDay[identifier], nil
}
