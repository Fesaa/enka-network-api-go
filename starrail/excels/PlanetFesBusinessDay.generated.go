package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesBusinessDay struct {
	AvatarEventNum json.Number            `json:"AvatarEventNum"`
	BusinessDay    json.Number            `json:"BusinessDay"`
	LargeBonusNum  json.Number            `json:"LargeBonusNum"`
	LittleBonusNum json.Number            `json:"LittleBonusNum"`
	MiddleBonusNum json.Number            `json:"MiddleBonusNum"`
	NaturalDay     json.Number            `json:"NaturalDay"`
	PamNum         json.Number            `json:"PamNum"`
	StartText      map[string]json.Number `json:"StartText"`
}
type PlanetFesBusinessDayAccessor struct {
	_data []PlanetFesBusinessDay
}

// LoadData retrieves the data. Must be called before PlanetFesBusinessDay.GroupData
func (a *PlanetFesBusinessDayAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesBusinessDay.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesBusinessDayAccessor) Raw() ([]PlanetFesBusinessDay, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesBusinessDay{}, err
		}
	}
	return a._data, nil
}
