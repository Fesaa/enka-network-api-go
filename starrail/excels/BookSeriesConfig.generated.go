package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type BookSeriesConfig struct {
	BookSeries         map[string]json.Number `json:"BookSeries"`
	BookSeriesComments map[string]json.Number `json:"BookSeriesComments"`
	BookSeriesID       json.Number            `json:"BookSeriesID"`
	BookSeriesNum      json.Number            `json:"BookSeriesNum"`
	BookSeriesWorld    json.Number            `json:"BookSeriesWorld"`
	IsShowInBookshelf  bool                   `json:"IsShowInBookshelf"`
}
type BookSeriesConfigAccessor struct {
	_data []BookSeriesConfig
}

// LoadData retrieves the data. Must be called before BookSeriesConfig.GroupData
func (a *BookSeriesConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/BookSeriesConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *BookSeriesConfigAccessor) Raw() ([]BookSeriesConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []BookSeriesConfig{}, err
		}
	}
	return a._data, nil
}
