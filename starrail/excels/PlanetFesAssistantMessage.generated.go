package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesAssistantMessage struct {
	AssistantMessageType string                 `json:"AssistantMessageType"`
	Delay                json.Number            `json:"Delay"`
	Description          map[string]json.Number `json:"Description"`
	ID                   json.Number            `json:"ID"`
	Interval             json.Number            `json:"Interval"`
	IsUseGLobalCD        bool                   `json:"IsUseGLobalCD"`
	Priority             json.Number            `json:"Priority"`
	TypePara             []json.Number          `json:"TypePara"`
	UnlockPlanetFesLevel json.Number            `json:"UnlockPlanetFesLevel"`
}
type PlanetFesAssistantMessageAccessor struct {
	_data []PlanetFesAssistantMessage
}

// LoadData retrieves the data. Must be called before PlanetFesAssistantMessage.GroupData
func (a *PlanetFesAssistantMessageAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesAssistantMessage.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesAssistantMessageAccessor) Raw() ([]PlanetFesAssistantMessage, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesAssistantMessage{}, err
		}
	}
	return a._data, nil
}
