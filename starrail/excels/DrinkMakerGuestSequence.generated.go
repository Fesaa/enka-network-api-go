package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type DrinkMakerGuestSequence struct {
	GuestID          json.Number `json:"GuestID"`
	NeedOpenWorkBook bool        `json:"NeedOpenWorkBook"`
	SequenceID       json.Number `json:"SequenceID"`
	StartChatID      json.Number `json:"StartChatID"`
}
type DrinkMakerGuestSequenceAccessor struct {
	_data []DrinkMakerGuestSequence
}

// LoadData retrieves the data. Must be called before DrinkMakerGuestSequence.GroupData
func (a *DrinkMakerGuestSequenceAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/DrinkMakerGuestSequence.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *DrinkMakerGuestSequenceAccessor) Raw() ([]DrinkMakerGuestSequence, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []DrinkMakerGuestSequence{}, err
		}
	}
	return a._data, nil
}
