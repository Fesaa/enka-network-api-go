package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ChallengeStoryTheme struct {
	ThemeBgPrefabPath    string      `json:"ThemeBgPrefabPath"`
	ThemeEffColor        string      `json:"ThemeEffColor"`
	ThemeID              json.Number `json:"ThemeID"`
	ThemeMainColor       string      `json:"ThemeMainColor"`
	ThemePanelPrefabPath string      `json:"ThemePanelPrefabPath"`
	ThemeSubColor1       string      `json:"ThemeSubColor1"`
	ThemeSubColor2       string      `json:"ThemeSubColor2"`
}
type ChallengeStoryThemeAccessor struct {
	_data                     []ChallengeStoryTheme
	_dataThemePanelPrefabPath map[string]ChallengeStoryTheme
}

// LoadData retrieves the data. Must be called before ChallengeStoryTheme.GroupData
func (a *ChallengeStoryThemeAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ChallengeStoryTheme.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ChallengeStoryThemeAccessor) Raw() ([]ChallengeStoryTheme, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ChallengeStoryTheme{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with ChallengeStoryThemeAccessor.LoadData to preload everything
func (a *ChallengeStoryThemeAccessor) GroupData() {
	a._dataThemePanelPrefabPath = map[string]ChallengeStoryTheme{}
	for _, d := range a._data {
		a._dataThemePanelPrefabPath[d.ThemePanelPrefabPath] = d
	}
}

// ByThemePanelPrefabPath returns the ChallengeStoryTheme uniquely identified by ThemePanelPrefabPath
//
// Error is only non-nil if the source errors out
func (a *ChallengeStoryThemeAccessor) ByThemePanelPrefabPath(identifier string) (ChallengeStoryTheme, error) {
	if a._dataThemePanelPrefabPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ChallengeStoryTheme{}, err
			}
		}
		a.GroupData()
	}
	return a._dataThemePanelPrefabPath[identifier], nil
}
