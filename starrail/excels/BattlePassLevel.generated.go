package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type BattlePassLevel struct {
	FreeReward          float64 `json:"FreeReward"`
	GroupID             float64 `json:"GroupID"`
	Level               float64 `json:"Level"`
	PremiumFixedReward1 float64 `json:"PremiumFixedReward1"`
	PremiumFixedReward2 float64 `json:"PremiumFixedReward2"`
	PremiumOptional     float64 `json:"PremiumOptional"`
	SpeicalPoint        bool    `json:"SpeicalPoint"`
}
type BattlePassLevelAccessor struct {
	_data []BattlePassLevel
}

// LoadData retrieves the data. Must be called before BattlePassLevel.GroupData
func (a *BattlePassLevelAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/BattlePassLevel.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *BattlePassLevelAccessor) Raw() ([]BattlePassLevel, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []BattlePassLevel{}, err
		}
	}
	return a._data, nil
}
