package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type BattleConditionConfig struct {
	AbilityName    string                 `json:"AbilityName"`
	ConditionDes   map[string]json.Number `json:"ConditionDes"`
	ID             json.Number            `json:"ID"`
	IsShowProgress json.Number            `json:"IsShowProgress"`
	TargetParam    json.Number            `json:"TargetParam"`
	WinOrLose      bool                   `json:"WinOrLose"`
}
type BattleConditionConfigAccessor struct {
	_data []BattleConditionConfig
}

// LoadData retrieves the data. Must be called before BattleConditionConfig.GroupData
func (a *BattleConditionConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/BattleConditionConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *BattleConditionConfigAccessor) Raw() ([]BattleConditionConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []BattleConditionConfig{}, err
		}
	}
	return a._data, nil
}
