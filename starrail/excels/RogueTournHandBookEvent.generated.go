package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueTournHandBookEvent struct {
	EventHandbookID         json.Number              `json:"EventHandbookID"`
	EventTitle              map[string]json.Number   `json:"EventTitle"`
	ImageID                 json.Number              `json:"ImageID"`
	IsUsed                  bool                     `json:"IsUsed"`
	Priority                json.Number              `json:"Priority"`
	TypeDisplayID           json.Number              `json:"TypeDisplayID"`
	UnlockDisplayID         json.Number              `json:"UnlockDisplayID"`
	UnlockNPCProgressIDList []map[string]json.Number `json:"UnlockNPCProgressIDList"`
}
type RogueTournHandBookEventAccessor struct {
	_data []RogueTournHandBookEvent
}

// LoadData retrieves the data. Must be called before RogueTournHandBookEvent.GroupData
func (a *RogueTournHandBookEventAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueTournHandBookEvent.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueTournHandBookEventAccessor) Raw() ([]RogueTournHandBookEvent, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueTournHandBookEvent{}, err
		}
	}
	return a._data, nil
}
