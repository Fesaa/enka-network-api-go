package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type TreasureDungeonGridBuff struct {
	Desc              map[string]json.Number `json:"Desc"`
	DisplayMazeBuffID json.Number            `json:"DisplayMazeBuffID"`
	GridBuffID        json.Number            `json:"GridBuffID"`
	GridBuffMaxLevel  json.Number            `json:"GridBuffMaxLevel"`
	ParamInt          json.Number            `json:"ParamInt"`
	Type              string                 `json:"Type"`
	TypeParam         []json.Number          `json:"TypeParam"`
}
type TreasureDungeonGridBuffAccessor struct {
	_data []TreasureDungeonGridBuff
}

// LoadData retrieves the data. Must be called before TreasureDungeonGridBuff.GroupData
func (a *TreasureDungeonGridBuffAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TreasureDungeonGridBuff.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TreasureDungeonGridBuffAccessor) Raw() ([]TreasureDungeonGridBuff, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TreasureDungeonGridBuff{}, err
		}
	}
	return a._data, nil
}
