package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type TreasureDungeonGridBuff struct {
	Desc              hash.Hash `json:"Desc"`
	DisplayMazeBuffID float64   `json:"DisplayMazeBuffID"`
	GridBuffID        float64   `json:"GridBuffID"`
	GridBuffMaxLevel  float64   `json:"GridBuffMaxLevel"`
	ParamInt          float64   `json:"ParamInt"`
	Type              string    `json:"Type"`
	TypeParam         []float64 `json:"TypeParam"`
}
type TreasureDungeonGridBuffAccessor struct {
	_data           []TreasureDungeonGridBuff
	_dataGridBuffID map[float64]TreasureDungeonGridBuff
}

// LoadData retrieves the data. Must be called before TreasureDungeonGridBuff.GroupData
func (a *TreasureDungeonGridBuffAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TreasureDungeonGridBuff.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TreasureDungeonGridBuffAccessor) Raw() ([]TreasureDungeonGridBuff, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TreasureDungeonGridBuff{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with TreasureDungeonGridBuffAccessor.LoadData to preload everything
func (a *TreasureDungeonGridBuffAccessor) GroupData() {
	a._dataGridBuffID = map[float64]TreasureDungeonGridBuff{}
	for _, d := range a._data {
		a._dataGridBuffID[d.GridBuffID] = d
	}
}

// ByGridBuffID returns the TreasureDungeonGridBuff uniquely identified by GridBuffID
//
// Error is only non-nil if the source errors out
func (a *TreasureDungeonGridBuffAccessor) ByGridBuffID(identifier float64) (TreasureDungeonGridBuff, error) {
	if a._dataGridBuffID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TreasureDungeonGridBuff{}, err
			}
		}
		a.GroupData()
	}
	return a._dataGridBuffID[identifier], nil
}
