package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type FreeStyleMotion struct {
	FreeStyleCharacterID  string      `json:"FreeStyleCharacterID"`
	ID                    json.Number `json:"ID"`
	LoopMotionPath        string      `json:"LoopMotionPath"`
	LoopMotionRibbonPath  string      `json:"LoopMotionRibbonPath"`
	StartMotion           string      `json:"StartMotion"`
	StartMotionPath       string      `json:"StartMotionPath"`
	StartMotionRibbonPath string      `json:"StartMotionRibbonPath"`
}
type FreeStyleMotionAccessor struct {
	_data []FreeStyleMotion
}

// LoadData retrieves the data. Must be called before FreeStyleMotion.GroupData
func (a *FreeStyleMotionAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/FreeStyleMotion.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *FreeStyleMotionAccessor) Raw() ([]FreeStyleMotion, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []FreeStyleMotion{}, err
		}
	}
	return a._data, nil
}
