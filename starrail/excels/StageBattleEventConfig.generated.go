package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type StageBattleEventConfig struct {
	AbilityNameList      []interface{}            `json:"AbilityNameList"`
	EventID              json.Number              `json:"EventID"`
	EventType            string                   `json:"EventType"`
	IconPath             string                   `json:"IconPath"`
	IncludeAvatar        bool                     `json:"IncludeAvatar"`
	IncludeMonster       bool                     `json:"IncludeMonster"`
	ModifierNameList     []string                 `json:"ModifierNameList"`
	ParamList            []map[string]json.Number `json:"ParamList"`
	SelfModifierNameList []interface{}            `json:"SelfModifierNameList"`
}
type StageBattleEventConfigAccessor struct {
	_data []StageBattleEventConfig
}

// LoadData retrieves the data. Must be called before StageBattleEventConfig.GroupData
func (a *StageBattleEventConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/StageBattleEventConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *StageBattleEventConfigAccessor) Raw() ([]StageBattleEventConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []StageBattleEventConfig{}, err
		}
	}
	return a._data, nil
}
