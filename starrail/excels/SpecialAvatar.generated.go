package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type SpecialAvatar struct {
	AbilityNameList        []string      `json:"AbilityNameList"`
	AnchorName             string        `json:"AnchorName"`
	AvatarID               json.Number   `json:"AvatarID"`
	CustomSkillTreeKey     string        `json:"CustomSkillTreeKey"`
	DefaultAvatarModelPath string        `json:"DefaultAvatarModelPath"`
	EquipmentID            json.Number   `json:"EquipmentID"`
	EquipmentLevel         json.Number   `json:"EquipmentLevel"`
	EquipmentPromotion     json.Number   `json:"EquipmentPromotion"`
	EquipmentRank          json.Number   `json:"EquipmentRank"`
	HasJoinHint            bool          `json:"HasJoinHint"`
	HasLeaveHint           bool          `json:"HasLeaveHint"`
	HaveActionDelay        bool          `json:"HaveActionDelay"`
	IsAutoBattle           bool          `json:"IsAutoBattle"`
	IsProtected            bool          `json:"IsProtected"`
	IsUseWorldLevel        bool          `json:"IsUseWorldLevel"`
	JsonPath               string        `json:"JsonPath"`
	Level                  json.Number   `json:"Level"`
	LevelAreaPrefab        string        `json:"LevelAreaPrefab"`
	LockBattleInfo         bool          `json:"LockBattleInfo"`
	LockMazeSkill          bool          `json:"LockMazeSkill"`
	OverrideProperty       []interface{} `json:"OverrideProperty"`
	PlayerID               json.Number   `json:"PlayerID"`
	PlayerJsonPath         string        `json:"PlayerJsonPath"`
	Promotion              json.Number   `json:"Promotion"`
	Rank                   json.Number   `json:"Rank"`
	RelicMainValue         json.Number   `json:"RelicMainValue"`
	RelicPropertyType      json.Number   `json:"RelicPropertyType"`
	RelicPropertyTypeExtra json.Number   `json:"RelicPropertyTypeExtra"`
	RelicSubValue          json.Number   `json:"RelicSubValue"`
	SkillTreeTemplate      string        `json:"SkillTreeTemplate"`
	SpecialAvatarID        json.Number   `json:"SpecialAvatarID"`
	Type                   string        `json:"Type"`
	WorldLevel             json.Number   `json:"WorldLevel"`
}
type SpecialAvatarAccessor struct {
	_data []SpecialAvatar
}

// LoadData retrieves the data. Must be called before SpecialAvatar.GroupData
func (a *SpecialAvatarAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SpecialAvatar.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SpecialAvatarAccessor) Raw() ([]SpecialAvatar, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SpecialAvatar{}, err
		}
	}
	return a._data, nil
}
