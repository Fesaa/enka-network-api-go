package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type OfferingUIPageConfig struct {
	CostTitle     map[string]json.Number `json:"CostTitle"`
	ID            json.Number            `json:"ID"`
	LevelTitle    map[string]json.Number `json:"LevelTitle"`
	LongTailDesc  map[string]json.Number `json:"LongTailDesc"`
	LongTailTitle map[string]json.Number `json:"LongTailTitle"`
	MaxTip        map[string]json.Number `json:"MaxTip"`
	Name          map[string]json.Number `json:"Name"`
	SubmitBtnName map[string]json.Number `json:"SubmitBtnName"`
}
type OfferingUIPageConfigAccessor struct {
	_data []OfferingUIPageConfig
}

// LoadData retrieves the data. Must be called before OfferingUIPageConfig.GroupData
func (a *OfferingUIPageConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/OfferingUIPageConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *OfferingUIPageConfigAccessor) Raw() ([]OfferingUIPageConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []OfferingUIPageConfig{}, err
		}
	}
	return a._data, nil
}
