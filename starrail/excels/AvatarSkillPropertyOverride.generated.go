package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type AvatarSkillPropertyOverride struct {
	DisableIconColorHint   bool        `json:"DisableIconColorHint"`
	IsSecretSkillNeed      bool        `json:"IsSecretSkillNeed"`
	ReplacePointIconPrefab string      `json:"ReplacePointIconPrefab"`
	SkillID                json.Number `json:"SkillID"`
}
type AvatarSkillPropertyOverrideAccessor struct {
	_data                       []AvatarSkillPropertyOverride
	_dataReplacePointIconPrefab map[string]AvatarSkillPropertyOverride
}

// LoadData retrieves the data. Must be called before AvatarSkillPropertyOverride.GroupData
func (a *AvatarSkillPropertyOverrideAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarSkillPropertyOverride.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarSkillPropertyOverrideAccessor) Raw() ([]AvatarSkillPropertyOverride, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarSkillPropertyOverride{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with AvatarSkillPropertyOverrideAccessor.LoadData to preload everything
func (a *AvatarSkillPropertyOverrideAccessor) GroupData() {
	a._dataReplacePointIconPrefab = map[string]AvatarSkillPropertyOverride{}
	for _, d := range a._data {
		a._dataReplacePointIconPrefab[d.ReplacePointIconPrefab] = d
	}
}

// ByReplacePointIconPrefab returns the AvatarSkillPropertyOverride uniquely identified by ReplacePointIconPrefab
//
// Error is only non-nil if the source errors out
func (a *AvatarSkillPropertyOverrideAccessor) ByReplacePointIconPrefab(identifier string) (AvatarSkillPropertyOverride, error) {
	if a._dataReplacePointIconPrefab == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkillPropertyOverride{}, err
			}
		}
		a.GroupData()
	}
	return a._dataReplacePointIconPrefab[identifier], nil
}
