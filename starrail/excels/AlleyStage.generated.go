package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type AlleyStage struct {
	StageAlleyEvent   []json.Number          `json:"StageAlleyEvent"`
	StageDesc         map[string]json.Number `json:"StageDesc"`
	StageID           json.Number            `json:"StageID"`
	StageMainMission  json.Number            `json:"StageMainMission"`
	StageSpecialOrder []json.Number          `json:"StageSpecialOrder"`
	StageTarget       json.Number            `json:"StageTarget"`
	StageTitle        map[string]json.Number `json:"StageTitle"`
	TakeMainMission   json.Number            `json:"TakeMainMission"`
}
type AlleyStageAccessor struct {
	_data []AlleyStage
}

// LoadData retrieves the data. Must be called before AlleyStage.GroupData
func (a *AlleyStageAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AlleyStage.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AlleyStageAccessor) Raw() ([]AlleyStage, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AlleyStage{}, err
		}
	}
	return a._data, nil
}
