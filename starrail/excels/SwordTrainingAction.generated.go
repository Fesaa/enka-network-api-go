package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type SwordTrainingAction struct {
	ActionID              float64                                    `json:"ActionID"`
	ActionIcon            string                                     `json:"ActionIcon"`
	ActionImage           string                                     `json:"ActionImage"`
	ActionLevel           float64                                    `json:"ActionLevel"`
	ActionName            hash.Hash                                  `json:"ActionName"`
	ActionPerformPrefab   []string                                   `json:"ActionPerformPrefab"`
	ActionPlanImage       string                                     `json:"ActionPlanImage"`
	ActionSubName         hash.Hash                                  `json:"ActionSubName"`
	ActionType            string                                     `json:"ActionType"`
	DisplayEffectHintList []SwordTrainingActionDisplayEffectHintList `json:"DisplayEffectHintList"`
	EffectIDList          []float64                                  `json:"EffectIDList"`
}
type SwordTrainingActionDisplayEffectHintList struct {
	Count    float64 `json:"Count"`
	StatusID float64 `json:"StatusID"`
}
type SwordTrainingActionAccessor struct {
	_data []SwordTrainingAction
}

// LoadData retrieves the data. Must be called before SwordTrainingAction.GroupData
func (a *SwordTrainingActionAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SwordTrainingAction.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SwordTrainingActionAccessor) Raw() ([]SwordTrainingAction, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SwordTrainingAction{}, err
		}
	}
	return a._data, nil
}
