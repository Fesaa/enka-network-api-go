package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type UpgradeAvatarSubRelic struct {
	COACLFEBBDA string                             `json:"COACLFEBBDA"`
	GEEKCAGBGMN string                             `json:"GEEKCAGBGMN"`
	GOBEGPKDLLF float64                            `json:"GOBEGPKDLLF"`
	JLLLGAGBEMF string                             `json:"JLLLGAGBEMF"`
	MCEGDBHOGOJ float64                            `json:"MCEGDBHOGOJ"`
	PINMGEKOAKM []UpgradeAvatarSubRelicPINMGEKOAKM `json:"PINMGEKOAKM"`
}
type UpgradeAvatarSubRelicPINMGEKOAKM struct {
	KHADHNNCFLH float64 `json:"KHADHNNCFLH"`
	LKOEFDPJGKD string  `json:"LKOEFDPJGKD"`
}
type UpgradeAvatarSubRelicAccessor struct {
	_data []UpgradeAvatarSubRelic
}

// LoadData retrieves the data. Must be called before UpgradeAvatarSubRelic.GroupData
func (a *UpgradeAvatarSubRelicAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/UpgradeAvatarSubRelic.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *UpgradeAvatarSubRelicAccessor) Raw() ([]UpgradeAvatarSubRelic, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []UpgradeAvatarSubRelic{}, err
		}
	}
	return a._data, nil
}
