package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ChestMonster struct {
	ConfigID      json.Number `json:"ConfigID"`
	EventID       json.Number `json:"EventID"`
	FloorID       json.Number `json:"FloorID"`
	GroupID       json.Number `json:"GroupID"`
	ID            json.Number `json:"ID"`
	MainMissionID json.Number `json:"MainMissionID"`
	MonsterType   string      `json:"MonsterType"`
	PlaneID       json.Number `json:"PlaneID"`
}
type ChestMonsterAccessor struct {
	_data []ChestMonster
}

// LoadData retrieves the data. Must be called before ChestMonster.GroupData
func (a *ChestMonsterAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ChestMonster.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ChestMonsterAccessor) Raw() ([]ChestMonster, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ChestMonster{}, err
		}
	}
	return a._data, nil
}
