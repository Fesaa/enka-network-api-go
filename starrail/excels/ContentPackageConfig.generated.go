package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ContentPackageConfig struct {
	ActivityModuleID     json.Number   `json:"ActivityModuleID"`
	AfterGuideEntranceID json.Number   `json:"AfterGuideEntranceID"`
	ContentID            json.Number   `json:"ContentID"`
	EarlyAccessCondition string        `json:"EarlyAccessCondition"`
	GuideConditions      string        `json:"GuideConditions"`
	InitEntranceID       json.Number   `json:"InitEntranceID"`
	IsHaveResidentPart   bool          `json:"IsHaveResidentPart"`
	MainMissionIDList    []json.Number `json:"MainMissionIDList"`
	ReleaseCondition     string        `json:"ReleaseCondition"`
}
type ContentPackageConfigAccessor struct {
	_data []ContentPackageConfig
}

// LoadData retrieves the data. Must be called before ContentPackageConfig.GroupData
func (a *ContentPackageConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ContentPackageConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ContentPackageConfigAccessor) Raw() ([]ContentPackageConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ContentPackageConfig{}, err
		}
	}
	return a._data, nil
}
