package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type GachaTypeBasicInfo struct {
	BuyPos        map[string]json.Number `json:"BuyPos"`
	DiamondID     json.Number            `json:"DiamondID"`
	GachaBar      string                 `json:"GachaBar"`
	GachaTypeID   string                 `json:"GachaTypeID"`
	ItemCosume    json.Number            `json:"ItemCosume"`
	ItemPrice     json.Number            `json:"ItemPrice"`
	UpPropability json.Number            `json:"UpPropability"`
}
type GachaTypeBasicInfoAccessor struct {
	_data            []GachaTypeBasicInfo
	_dataGachaTypeID map[string]GachaTypeBasicInfo
}

// LoadData retrieves the data. Must be called before GachaTypeBasicInfo.GroupData
func (a *GachaTypeBasicInfoAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/GachaTypeBasicInfo.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *GachaTypeBasicInfoAccessor) Raw() ([]GachaTypeBasicInfo, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []GachaTypeBasicInfo{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with GachaTypeBasicInfoAccessor.LoadData to preload everything
func (a *GachaTypeBasicInfoAccessor) GroupData() {
	a._dataGachaTypeID = map[string]GachaTypeBasicInfo{}
	for _, d := range a._data {
		a._dataGachaTypeID[d.GachaTypeID] = d
	}
}

// ByGachaTypeID returns the GachaTypeBasicInfo uniquely identified by GachaTypeID
//
// Error is only non-nil if the source errors out
func (a *GachaTypeBasicInfoAccessor) ByGachaTypeID(identifier string) (GachaTypeBasicInfo, error) {
	if a._dataGachaTypeID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return GachaTypeBasicInfo{}, err
			}
		}
		a.GroupData()
	}
	return a._dataGachaTypeID[identifier], nil
}
