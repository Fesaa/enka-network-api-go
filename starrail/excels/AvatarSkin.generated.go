package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type AvatarSkin struct {
	ActionAvatarHeadIconPath           string        `json:"ActionAvatarHeadIconPath"`
	AdventureDefaultAvatarHeadIconPath string        `json:"AdventureDefaultAvatarHeadIconPath"`
	AssistOffset                       []interface{} `json:"AssistOffset"`
	AvatarCutinBgImgPath               string        `json:"AvatarCutinBgImgPath"`
	AvatarCutinFrontImgPath            string        `json:"AvatarCutinFrontImgPath"`
	AvatarCutinImgPath                 string        `json:"AvatarCutinImgPath"`
	AvatarDropOffset                   []float64     `json:"AvatarDropOffset"`
	AvatarID                           float64       `json:"AvatarID"`
	AvatarMiniIconPath                 string        `json:"AvatarMiniIconPath"`
	AvatarNameOnDropSkin               hash.Hash     `json:"AvatarNameOnDropSkin"`
	AvatarSelfShowOffset               []interface{} `json:"AvatarSelfShowOffset"`
	AvatarSideIconPath                 string        `json:"AvatarSideIconPath"`
	AvatarSkinName                     hash.Hash     `json:"AvatarSkinName"`
	AvatarSkinSynopsis                 hash.Hash     `json:"AvatarSkinSynopsis"`
	DefaultAvatarHeadIconPath          string        `json:"DefaultAvatarHeadIconPath"`
	DefaultAvatarModelPath             string        `json:"DefaultAvatarModelPath"`
	FreeStyleCharacterID               string        `json:"FreeStyleCharacterID"`
	ID                                 float64       `json:"ID"`
	IntroDataID                        float64       `json:"IntroDataID"`
	PlayerCardID                       float64       `json:"PlayerCardID"`
	PlayerCardTitleText                hash.Hash     `json:"PlayerCardTitleText"`
	PlayerPrefabPath                   string        `json:"PlayerPrefabPath"`
	ShopBgPath                         string        `json:"ShopBgPath"`
	ShopRecommendTabBgPath             string        `json:"ShopRecommendTabBgPath"`
	ShowType                           string        `json:"ShowType"`
	SideAvatarHeadIconPath             string        `json:"SideAvatarHeadIconPath"`
	SkinConfigPath                     string        `json:"SkinConfigPath"`
	UIAvatarModelPath                  string        `json:"UIAvatarModelPath"`
	UltraSkillCutInPrefabPath          string        `json:"UltraSkillCutInPrefabPath"`
	VideoID                            float64       `json:"VideoID"`
	WaitingAvatarHeadIconPath          string        `json:"WaitingAvatarHeadIconPath"`
}
type AvatarSkinAccessor struct {
	_data                                   []AvatarSkin
	_dataActionAvatarHeadIconPath           map[string]AvatarSkin
	_dataAdventureDefaultAvatarHeadIconPath map[string]AvatarSkin
	_dataAvatarCutinBgImgPath               map[string]AvatarSkin
	_dataAvatarCutinFrontImgPath            map[string]AvatarSkin
	_dataAvatarCutinImgPath                 map[string]AvatarSkin
	_dataAvatarID                           map[float64]AvatarSkin
	_dataAvatarMiniIconPath                 map[string]AvatarSkin
	_dataAvatarSideIconPath                 map[string]AvatarSkin
	_dataDefaultAvatarHeadIconPath          map[string]AvatarSkin
	_dataDefaultAvatarModelPath             map[string]AvatarSkin
	_dataFreeStyleCharacterID               map[string]AvatarSkin
	_dataID                                 map[float64]AvatarSkin
	_dataIntroDataID                        map[float64]AvatarSkin
	_dataPlayerCardID                       map[float64]AvatarSkin
	_dataPlayerPrefabPath                   map[string]AvatarSkin
	_dataShopBgPath                         map[string]AvatarSkin
	_dataShopRecommendTabBgPath             map[string]AvatarSkin
	_dataSideAvatarHeadIconPath             map[string]AvatarSkin
	_dataSkinConfigPath                     map[string]AvatarSkin
	_dataUIAvatarModelPath                  map[string]AvatarSkin
	_dataUltraSkillCutInPrefabPath          map[string]AvatarSkin
	_dataWaitingAvatarHeadIconPath          map[string]AvatarSkin
}

// LoadData retrieves the data. Must be called before AvatarSkin.GroupData
func (a *AvatarSkinAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarSkin.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarSkinAccessor) Raw() ([]AvatarSkin, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarSkin{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with AvatarSkinAccessor.LoadData to preload everything
func (a *AvatarSkinAccessor) GroupData() {
	a._dataActionAvatarHeadIconPath = map[string]AvatarSkin{}
	a._dataAdventureDefaultAvatarHeadIconPath = map[string]AvatarSkin{}
	a._dataAvatarCutinBgImgPath = map[string]AvatarSkin{}
	a._dataAvatarCutinFrontImgPath = map[string]AvatarSkin{}
	a._dataAvatarCutinImgPath = map[string]AvatarSkin{}
	a._dataAvatarID = map[float64]AvatarSkin{}
	a._dataAvatarMiniIconPath = map[string]AvatarSkin{}
	a._dataAvatarSideIconPath = map[string]AvatarSkin{}
	a._dataDefaultAvatarHeadIconPath = map[string]AvatarSkin{}
	a._dataDefaultAvatarModelPath = map[string]AvatarSkin{}
	a._dataFreeStyleCharacterID = map[string]AvatarSkin{}
	a._dataID = map[float64]AvatarSkin{}
	a._dataIntroDataID = map[float64]AvatarSkin{}
	a._dataPlayerCardID = map[float64]AvatarSkin{}
	a._dataPlayerPrefabPath = map[string]AvatarSkin{}
	a._dataShopBgPath = map[string]AvatarSkin{}
	a._dataShopRecommendTabBgPath = map[string]AvatarSkin{}
	a._dataSideAvatarHeadIconPath = map[string]AvatarSkin{}
	a._dataSkinConfigPath = map[string]AvatarSkin{}
	a._dataUIAvatarModelPath = map[string]AvatarSkin{}
	a._dataUltraSkillCutInPrefabPath = map[string]AvatarSkin{}
	a._dataWaitingAvatarHeadIconPath = map[string]AvatarSkin{}
	for _, d := range a._data {
		a._dataActionAvatarHeadIconPath[d.ActionAvatarHeadIconPath] = d
		a._dataAdventureDefaultAvatarHeadIconPath[d.AdventureDefaultAvatarHeadIconPath] = d
		a._dataAvatarCutinBgImgPath[d.AvatarCutinBgImgPath] = d
		a._dataAvatarCutinFrontImgPath[d.AvatarCutinFrontImgPath] = d
		a._dataAvatarCutinImgPath[d.AvatarCutinImgPath] = d
		a._dataAvatarID[d.AvatarID] = d
		a._dataAvatarMiniIconPath[d.AvatarMiniIconPath] = d
		a._dataAvatarSideIconPath[d.AvatarSideIconPath] = d
		a._dataDefaultAvatarHeadIconPath[d.DefaultAvatarHeadIconPath] = d
		a._dataDefaultAvatarModelPath[d.DefaultAvatarModelPath] = d
		a._dataFreeStyleCharacterID[d.FreeStyleCharacterID] = d
		a._dataID[d.ID] = d
		a._dataIntroDataID[d.IntroDataID] = d
		a._dataPlayerCardID[d.PlayerCardID] = d
		a._dataPlayerPrefabPath[d.PlayerPrefabPath] = d
		a._dataShopBgPath[d.ShopBgPath] = d
		a._dataShopRecommendTabBgPath[d.ShopRecommendTabBgPath] = d
		a._dataSideAvatarHeadIconPath[d.SideAvatarHeadIconPath] = d
		a._dataSkinConfigPath[d.SkinConfigPath] = d
		a._dataUIAvatarModelPath[d.UIAvatarModelPath] = d
		a._dataUltraSkillCutInPrefabPath[d.UltraSkillCutInPrefabPath] = d
		a._dataWaitingAvatarHeadIconPath[d.WaitingAvatarHeadIconPath] = d
	}
}

// ByActionAvatarHeadIconPath returns the AvatarSkin uniquely identified by ActionAvatarHeadIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByActionAvatarHeadIconPath(identifier string) (AvatarSkin, error) {
	if a._dataActionAvatarHeadIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataActionAvatarHeadIconPath[identifier], nil
}

// ByAdventureDefaultAvatarHeadIconPath returns the AvatarSkin uniquely identified by AdventureDefaultAvatarHeadIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAdventureDefaultAvatarHeadIconPath(identifier string) (AvatarSkin, error) {
	if a._dataAdventureDefaultAvatarHeadIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAdventureDefaultAvatarHeadIconPath[identifier], nil
}

// ByAvatarCutinBgImgPath returns the AvatarSkin uniquely identified by AvatarCutinBgImgPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAvatarCutinBgImgPath(identifier string) (AvatarSkin, error) {
	if a._dataAvatarCutinBgImgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarCutinBgImgPath[identifier], nil
}

// ByAvatarCutinFrontImgPath returns the AvatarSkin uniquely identified by AvatarCutinFrontImgPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAvatarCutinFrontImgPath(identifier string) (AvatarSkin, error) {
	if a._dataAvatarCutinFrontImgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarCutinFrontImgPath[identifier], nil
}

// ByAvatarCutinImgPath returns the AvatarSkin uniquely identified by AvatarCutinImgPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAvatarCutinImgPath(identifier string) (AvatarSkin, error) {
	if a._dataAvatarCutinImgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarCutinImgPath[identifier], nil
}

// ByAvatarID returns the AvatarSkin uniquely identified by AvatarID
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAvatarID(identifier float64) (AvatarSkin, error) {
	if a._dataAvatarID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarID[identifier], nil
}

// ByAvatarMiniIconPath returns the AvatarSkin uniquely identified by AvatarMiniIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAvatarMiniIconPath(identifier string) (AvatarSkin, error) {
	if a._dataAvatarMiniIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarMiniIconPath[identifier], nil
}

// ByAvatarSideIconPath returns the AvatarSkin uniquely identified by AvatarSideIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByAvatarSideIconPath(identifier string) (AvatarSkin, error) {
	if a._dataAvatarSideIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarSideIconPath[identifier], nil
}

// ByDefaultAvatarHeadIconPath returns the AvatarSkin uniquely identified by DefaultAvatarHeadIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByDefaultAvatarHeadIconPath(identifier string) (AvatarSkin, error) {
	if a._dataDefaultAvatarHeadIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataDefaultAvatarHeadIconPath[identifier], nil
}

// ByDefaultAvatarModelPath returns the AvatarSkin uniquely identified by DefaultAvatarModelPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByDefaultAvatarModelPath(identifier string) (AvatarSkin, error) {
	if a._dataDefaultAvatarModelPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataDefaultAvatarModelPath[identifier], nil
}

// ByFreeStyleCharacterID returns the AvatarSkin uniquely identified by FreeStyleCharacterID
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByFreeStyleCharacterID(identifier string) (AvatarSkin, error) {
	if a._dataFreeStyleCharacterID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFreeStyleCharacterID[identifier], nil
}

// ByID returns the AvatarSkin uniquely identified by ID
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByID(identifier float64) (AvatarSkin, error) {
	if a._dataID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataID[identifier], nil
}

// ByIntroDataID returns the AvatarSkin uniquely identified by IntroDataID
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByIntroDataID(identifier float64) (AvatarSkin, error) {
	if a._dataIntroDataID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataIntroDataID[identifier], nil
}

// ByPlayerCardID returns the AvatarSkin uniquely identified by PlayerCardID
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByPlayerCardID(identifier float64) (AvatarSkin, error) {
	if a._dataPlayerCardID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataPlayerCardID[identifier], nil
}

// ByPlayerPrefabPath returns the AvatarSkin uniquely identified by PlayerPrefabPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByPlayerPrefabPath(identifier string) (AvatarSkin, error) {
	if a._dataPlayerPrefabPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataPlayerPrefabPath[identifier], nil
}

// ByShopBgPath returns the AvatarSkin uniquely identified by ShopBgPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByShopBgPath(identifier string) (AvatarSkin, error) {
	if a._dataShopBgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataShopBgPath[identifier], nil
}

// ByShopRecommendTabBgPath returns the AvatarSkin uniquely identified by ShopRecommendTabBgPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByShopRecommendTabBgPath(identifier string) (AvatarSkin, error) {
	if a._dataShopRecommendTabBgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataShopRecommendTabBgPath[identifier], nil
}

// BySideAvatarHeadIconPath returns the AvatarSkin uniquely identified by SideAvatarHeadIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) BySideAvatarHeadIconPath(identifier string) (AvatarSkin, error) {
	if a._dataSideAvatarHeadIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataSideAvatarHeadIconPath[identifier], nil
}

// BySkinConfigPath returns the AvatarSkin uniquely identified by SkinConfigPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) BySkinConfigPath(identifier string) (AvatarSkin, error) {
	if a._dataSkinConfigPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataSkinConfigPath[identifier], nil
}

// ByUIAvatarModelPath returns the AvatarSkin uniquely identified by UIAvatarModelPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByUIAvatarModelPath(identifier string) (AvatarSkin, error) {
	if a._dataUIAvatarModelPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataUIAvatarModelPath[identifier], nil
}

// ByUltraSkillCutInPrefabPath returns the AvatarSkin uniquely identified by UltraSkillCutInPrefabPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByUltraSkillCutInPrefabPath(identifier string) (AvatarSkin, error) {
	if a._dataUltraSkillCutInPrefabPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataUltraSkillCutInPrefabPath[identifier], nil
}

// ByWaitingAvatarHeadIconPath returns the AvatarSkin uniquely identified by WaitingAvatarHeadIconPath
//
// Error is only non-nil if the source errors out
func (a *AvatarSkinAccessor) ByWaitingAvatarHeadIconPath(identifier string) (AvatarSkin, error) {
	if a._dataWaitingAvatarHeadIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AvatarSkin{}, err
			}
		}
		a.GroupData()
	}
	return a._dataWaitingAvatarHeadIconPath[identifier], nil
}
