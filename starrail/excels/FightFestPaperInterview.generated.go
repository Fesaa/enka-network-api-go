package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type FightFestPaperInterview struct {
	Comment        map[string]json.Number `json:"Comment"`
	Detail         map[string]json.Number `json:"Detail"`
	IconPath       string                 `json:"IconPath"`
	Info           map[string]json.Number `json:"Info"`
	Name           map[string]json.Number `json:"Name"`
	PaperID        json.Number            `json:"PaperID"`
	SortWeight     json.Number            `json:"SortWeight"`
	TextJoinItemID json.Number            `json:"TextJoinItemID"`
}
type FightFestPaperInterviewAccessor struct {
	_data []FightFestPaperInterview
}

// LoadData retrieves the data. Must be called before FightFestPaperInterview.GroupData
func (a *FightFestPaperInterviewAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/FightFestPaperInterview.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *FightFestPaperInterviewAccessor) Raw() ([]FightFestPaperInterview, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []FightFestPaperInterview{}, err
		}
	}
	return a._data, nil
}
