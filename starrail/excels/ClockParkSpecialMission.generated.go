package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ClockParkSpecialMission struct {
	EventName                  map[string]json.Number `json:"EventName"`
	EventNum                   json.Number            `json:"EventNum"`
	EventScript                json.Number            `json:"EventScript"`
	SpecialMissionGotoIDBefore json.Number            `json:"SpecialMissionGotoIDBefore"`
	SpecialMissionID           json.Number            `json:"SpecialMissionID"`
	SpecialMissionIconPath     string                 `json:"SpecialMissionIconPath"`
	SpecialMissionImgPath      string                 `json:"SpecialMissionImgPath"`
	SpecialMissionUnlockItemID json.Number            `json:"SpecialMissionUnlockItemID"`
}
type ClockParkSpecialMissionAccessor struct {
	_data []ClockParkSpecialMission
}

// LoadData retrieves the data. Must be called before ClockParkSpecialMission.GroupData
func (a *ClockParkSpecialMissionAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ClockParkSpecialMission.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ClockParkSpecialMissionAccessor) Raw() ([]ClockParkSpecialMission, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ClockParkSpecialMission{}, err
		}
	}
	return a._data, nil
}
