package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ActivityPhotoExhibition struct {
	ActivityModuleID json.Number            `json:"ActivityModuleID"`
	CommentList      []json.Number          `json:"CommentList"`
	Daily            map[string]json.Number `json:"Daily"`
	GroupID          json.Number            `json:"GroupID"`
	PhotoID          []json.Number          `json:"PhotoID"`
	QuestID          json.Number            `json:"QuestID"`
	Tab              map[string]json.Number `json:"Tab"`
}
type ActivityPhotoExhibitionAccessor struct {
	_data []ActivityPhotoExhibition
}

// LoadData retrieves the data. Must be called before ActivityPhotoExhibition.GroupData
func (a *ActivityPhotoExhibitionAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ActivityPhotoExhibition.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ActivityPhotoExhibitionAccessor) Raw() ([]ActivityPhotoExhibition, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ActivityPhotoExhibition{}, err
		}
	}
	return a._data, nil
}
