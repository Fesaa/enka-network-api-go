package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type DrinkMakerTagData struct {
	IsShow     bool                   `json:"IsShow"`
	MixParam   []json.Number          `json:"MixParam"`
	MixType    string                 `json:"MixType"`
	Priority   json.Number            `json:"Priority"`
	SourceType string                 `json:"SourceType"`
	TagID      json.Number            `json:"TagID"`
	TagName    map[string]json.Number `json:"TagName"`
	Type       string                 `json:"Type"`
}
type DrinkMakerTagDataAccessor struct {
	_data []DrinkMakerTagData
}

// LoadData retrieves the data. Must be called before DrinkMakerTagData.GroupData
func (a *DrinkMakerTagDataAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/DrinkMakerTagData.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *DrinkMakerTagDataAccessor) Raw() ([]DrinkMakerTagData, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []DrinkMakerTagData{}, err
		}
	}
	return a._data, nil
}
