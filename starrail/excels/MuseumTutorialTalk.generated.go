package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type MuseumTutorialTalk struct {
	TriggerCustomString string      `json:"TriggerCustomString"`
	TriggerMissionID    json.Number `json:"TriggerMissionID"`
}
type MuseumTutorialTalkAccessor struct {
	_data                    []MuseumTutorialTalk
	_dataTriggerCustomString map[string]MuseumTutorialTalk
	_dataTriggerMissionID    map[json.Number]MuseumTutorialTalk
}

// LoadData retrieves the data. Must be called before MuseumTutorialTalk.GroupData
func (a *MuseumTutorialTalkAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MuseumTutorialTalk.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MuseumTutorialTalkAccessor) Raw() ([]MuseumTutorialTalk, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MuseumTutorialTalk{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with MuseumTutorialTalkAccessor.LoadData to preload everything
func (a *MuseumTutorialTalkAccessor) GroupData() {
	a._dataTriggerCustomString = map[string]MuseumTutorialTalk{}
	a._dataTriggerMissionID = map[json.Number]MuseumTutorialTalk{}
	for _, d := range a._data {
		a._dataTriggerCustomString[d.TriggerCustomString] = d
		a._dataTriggerMissionID[d.TriggerMissionID] = d
	}
}

// ByTriggerCustomString returns the MuseumTutorialTalk uniquely identified by TriggerCustomString
//
// Error is only non-nil if the source errors out
func (a *MuseumTutorialTalkAccessor) ByTriggerCustomString(identifier string) (MuseumTutorialTalk, error) {
	if a._dataTriggerCustomString == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return MuseumTutorialTalk{}, err
			}
		}
		a.GroupData()
	}
	return a._dataTriggerCustomString[identifier], nil
}

// ByTriggerMissionID returns the MuseumTutorialTalk uniquely identified by TriggerMissionID
//
// Error is only non-nil if the source errors out
func (a *MuseumTutorialTalkAccessor) ByTriggerMissionID(identifier json.Number) (MuseumTutorialTalk, error) {
	if a._dataTriggerMissionID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return MuseumTutorialTalk{}, err
			}
		}
		a.GroupData()
	}
	return a._dataTriggerMissionID[identifier], nil
}
