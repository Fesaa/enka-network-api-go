package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueNousAeon struct {
	AeonID                      json.Number            `json:"AeonID"`
	BattleEventBuffGroup        json.Number            `json:"BattleEventBuffGroup"`
	BattleEventEnhanceBuffGroup json.Number            `json:"BattleEventEnhanceBuffGroup"`
	DisplayID                   json.Number            `json:"DisplayID"`
	EffectDesc1                 map[string]json.Number `json:"EffectDesc1"`
	EffectParam1                []json.Number          `json:"EffectParam1"`
	EffectType1                 string                 `json:"EffectType1"`
	RogueBuffType               json.Number            `json:"RogueBuffType"`
	Sort                        json.Number            `json:"Sort"`
}
type RogueNousAeonAccessor struct {
	_data []RogueNousAeon
}

// LoadData retrieves the data. Must be called before RogueNousAeon.GroupData
func (a *RogueNousAeonAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueNousAeon.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueNousAeonAccessor) Raw() ([]RogueNousAeon, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueNousAeon{}, err
		}
	}
	return a._data, nil
}
