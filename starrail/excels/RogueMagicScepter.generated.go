package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type RogueMagicScepter struct {
	EffectTypeList    []string                         `json:"EffectTypeList"`
	FuncType          string                           `json:"FuncType"`
	LimitRangeType    string                           `json:"LimitRangeType"`
	LockMagicUnit     []RogueMagicScepterLockMagicUnit `json:"LockMagicUnit"`
	ScepterBasicPower hash.Value                       `json:"ScepterBasicPower"`
	ScepterID         float64                          `json:"ScepterID"`
	ScepterLevel      float64                          `json:"ScepterLevel"`
	StaffMazeBuffID   float64                          `json:"StaffMazeBuffID"`
	StyleType         string                           `json:"StyleType"`
	TrenchCount       RogueMagicScepterTrenchCount     `json:"TrenchCount"`
	UnlockID          float64                          `json:"UnlockID"`
}
type RogueMagicScepterLockMagicUnit struct {
	KAMGFNJJJDE float64 `json:"KAMGFNJJJDE"`
	OMAMNKOLIOE float64 `json:"OMAMNKOLIOE"`
}
type RogueMagicScepterTrenchCount struct {
	Active  float64 `json:"Active"`
	Attach  float64 `json:"Attach"`
	Passive float64 `json:"Passive"`
}
type RogueMagicScepterAccessor struct {
	_data []RogueMagicScepter
}

// LoadData retrieves the data. Must be called before RogueMagicScepter.GroupData
func (a *RogueMagicScepterAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueMagicScepter.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueMagicScepterAccessor) Raw() ([]RogueMagicScepter, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueMagicScepter{}, err
		}
	}
	return a._data, nil
}
