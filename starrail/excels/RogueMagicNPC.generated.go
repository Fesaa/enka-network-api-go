package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type RogueMagicNPC struct {
	NPCJsonPath string  `json:"NPCJsonPath"`
	RogueNPCID  float64 `json:"RogueNPCID"`
}
type RogueMagicNPCAccessor struct {
	_data            []RogueMagicNPC
	_dataRogueNPCID  map[float64]RogueMagicNPC
	_dataNPCJsonPath map[string]RogueMagicNPC
}

// LoadData retrieves the data. Must be called before RogueMagicNPC.GroupData
func (a *RogueMagicNPCAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueMagicNPC.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueMagicNPCAccessor) Raw() ([]RogueMagicNPC, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueMagicNPC{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with RogueMagicNPCAccessor.LoadData to preload everything
func (a *RogueMagicNPCAccessor) GroupData() {
	for _, d := range a._data {
		a._dataRogueNPCID[d.RogueNPCID] = d
		a._dataNPCJsonPath[d.NPCJsonPath] = d
	}
}

// ByRogueNPCID returns the RogueMagicNPC uniquely identified by RogueNPCID
//
// Error is only non-nil if the source errors out
func (a *RogueMagicNPCAccessor) ByRogueNPCID(identifier float64) (RogueMagicNPC, error) {
	if a._dataRogueNPCID == nil {
		err := a.LoadData()
		if err != nil {
			return RogueMagicNPC{}, err
		}
		a.GroupData()
	}
	return a._dataRogueNPCID[identifier], nil
}

// ByNPCJsonPath returns the RogueMagicNPC uniquely identified by NPCJsonPath
//
// Error is only non-nil if the source errors out
func (a *RogueMagicNPCAccessor) ByNPCJsonPath(identifier string) (RogueMagicNPC, error) {
	if a._dataNPCJsonPath == nil {
		err := a.LoadData()
		if err != nil {
			return RogueMagicNPC{}, err
		}
		a.GroupData()
	}
	return a._dataNPCJsonPath[identifier], nil
}
