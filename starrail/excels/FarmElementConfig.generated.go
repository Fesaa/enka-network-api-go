package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type FarmElementConfig struct {
	AutoObtainDamageType bool          `json:"AutoObtainDamageType"`
	DamageType           []string      `json:"DamageType"`
	DropList             []json.Number `json:"DropList"`
	ID                   json.Number   `json:"ID"`
	MappingInfoID        json.Number   `json:"MappingInfoID"`
	ParamList            []interface{} `json:"ParamList"`
	StageID              json.Number   `json:"StageID"`
	StaminaCost          json.Number   `json:"StaminaCost"`
	WorldLevel           json.Number   `json:"WorldLevel"`
}
type FarmElementConfigAccessor struct {
	_data []FarmElementConfig
}

// LoadData retrieves the data. Must be called before FarmElementConfig.GroupData
func (a *FarmElementConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/FarmElementConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *FarmElementConfigAccessor) Raw() ([]FarmElementConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []FarmElementConfig{}, err
		}
	}
	return a._data, nil
}
