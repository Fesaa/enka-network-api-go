package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ClientLogConfig struct {
	Actionid    json.Number                                  `json:"Actionid"`
	ID          json.Number                                  `json:"ID"`
	IsWhiteMode bool                                         `json:"IsWhiteMode"`
	Params      map[string][]ClientLogConfigParamsArrayValue `json:"Params"`
}
type ClientLogConfigParamsArrayValue struct {
	IntValue    json.Number `json:"IntValue"`
	StringValue string      `json:"StringValue"`
}
type ClientLogConfigAccessor struct {
	_data []ClientLogConfig
}

// LoadData retrieves the data. Must be called before ClientLogConfig.GroupData
func (a *ClientLogConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ClientLogConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ClientLogConfigAccessor) Raw() ([]ClientLogConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ClientLogConfig{}, err
		}
	}
	return a._data, nil
}
