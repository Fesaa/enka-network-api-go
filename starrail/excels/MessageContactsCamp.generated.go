package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type MessageContactsCamp struct {
	ContactsCamp float64   `json:"ContactsCamp"`
	Name         hash.Hash `json:"Name"`
	SortID       float64   `json:"SortID"`
}
type MessageContactsCampAccessor struct {
	_data             []MessageContactsCamp
	_dataContactsCamp map[float64]MessageContactsCamp
	_dataSortID       map[float64]MessageContactsCamp
}

// LoadData retrieves the data. Must be called before MessageContactsCamp.GroupData
func (a *MessageContactsCampAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MessageContactsCamp.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MessageContactsCampAccessor) Raw() ([]MessageContactsCamp, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MessageContactsCamp{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with MessageContactsCampAccessor.LoadData to preload everything
func (a *MessageContactsCampAccessor) GroupData() {
	for _, d := range a._data {
		a._dataContactsCamp[d.ContactsCamp] = d
		a._dataSortID[d.SortID] = d
	}
}

// ByContactsCamp returns the MessageContactsCamp uniquely identified by ContactsCamp
//
// Error is only non-nil if the source errors out
func (a *MessageContactsCampAccessor) ByContactsCamp(identifier float64) (MessageContactsCamp, error) {
	if a._dataContactsCamp == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return MessageContactsCamp{}, err
			}
		}
		a.GroupData()
	}
	return a._dataContactsCamp[identifier], nil
}

// BySortID returns the MessageContactsCamp uniquely identified by SortID
//
// Error is only non-nil if the source errors out
func (a *MessageContactsCampAccessor) BySortID(identifier float64) (MessageContactsCamp, error) {
	if a._dataSortID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return MessageContactsCamp{}, err
			}
		}
		a.GroupData()
	}
	return a._dataSortID[identifier], nil
}
