package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type TreasureDungeonItem struct {
	AudioEventName string    `json:"AudioEventName"`
	Desc           hash.Hash `json:"Desc"`
	IconPath       string    `json:"IconPath"`
	IconPath2D     string    `json:"IconPath2D"`
	ItemID         float64   `json:"ItemID"`
	Name           hash.Hash `json:"Name"`
	ParamInt       float64   `json:"ParamInt"`
	Type           string    `json:"Type"`
	TypeParam      []float64 `json:"TypeParam"`
}
type TreasureDungeonItemAccessor struct {
	_data       []TreasureDungeonItem
	_dataItemID map[float64]TreasureDungeonItem
}

// LoadData retrieves the data. Must be called before TreasureDungeonItem.GroupData
func (a *TreasureDungeonItemAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TreasureDungeonItem.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TreasureDungeonItemAccessor) Raw() ([]TreasureDungeonItem, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TreasureDungeonItem{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with TreasureDungeonItemAccessor.LoadData to preload everything
func (a *TreasureDungeonItemAccessor) GroupData() {
	a._dataItemID = map[float64]TreasureDungeonItem{}
	for _, d := range a._data {
		a._dataItemID[d.ItemID] = d
	}
}

// ByItemID returns the TreasureDungeonItem uniquely identified by ItemID
//
// Error is only non-nil if the source errors out
func (a *TreasureDungeonItemAccessor) ByItemID(identifier float64) (TreasureDungeonItem, error) {
	if a._dataItemID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TreasureDungeonItem{}, err
			}
		}
		a.GroupData()
	}
	return a._dataItemID[identifier], nil
}
