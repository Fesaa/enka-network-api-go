package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type AdvertisingBoardConfig struct {
	AdvertisingBoardID json.Number `json:"AdvertisingBoardID"`
	Interval           json.Number `json:"Interval"`
	IsSwitch           bool        `json:"IsSwitch"`
	VoiceID            json.Number `json:"VoiceID"`
}
type AdvertisingBoardConfigAccessor struct {
	_data                   []AdvertisingBoardConfig
	_dataAdvertisingBoardID map[json.Number]AdvertisingBoardConfig
}

// LoadData retrieves the data. Must be called before AdvertisingBoardConfig.GroupData
func (a *AdvertisingBoardConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AdvertisingBoardConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AdvertisingBoardConfigAccessor) Raw() ([]AdvertisingBoardConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AdvertisingBoardConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with AdvertisingBoardConfigAccessor.LoadData to preload everything
func (a *AdvertisingBoardConfigAccessor) GroupData() {
	a._dataAdvertisingBoardID = map[json.Number]AdvertisingBoardConfig{}
	for _, d := range a._data {
		a._dataAdvertisingBoardID[d.AdvertisingBoardID] = d
	}
}

// ByAdvertisingBoardID returns the AdvertisingBoardConfig uniquely identified by AdvertisingBoardID
//
// Error is only non-nil if the source errors out
func (a *AdvertisingBoardConfigAccessor) ByAdvertisingBoardID(identifier json.Number) (AdvertisingBoardConfig, error) {
	if a._dataAdvertisingBoardID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AdvertisingBoardConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAdvertisingBoardID[identifier], nil
}
