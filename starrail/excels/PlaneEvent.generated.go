package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type PlaneEvent struct {
	DisplayItemList  []interface{} `json:"DisplayItemList"`
	DropList         []json.Number `json:"DropList"`
	EventID          json.Number   `json:"EventID"`
	IsUseMonsterDrop bool          `json:"IsUseMonsterDrop"`
	Reward           json.Number   `json:"Reward"`
	StageID          json.Number   `json:"StageID"`
	WorldLevel       json.Number   `json:"WorldLevel"`
}
type PlaneEventAccessor struct {
	_data []PlaneEvent
}

// LoadData retrieves the data. Must be called before PlaneEvent.GroupData
func (a *PlaneEventAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlaneEvent.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlaneEventAccessor) Raw() ([]PlaneEvent, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlaneEvent{}, err
		}
	}
	return a._data, nil
}
