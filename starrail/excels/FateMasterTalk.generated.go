package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type FateMasterTalk struct {
	FKDJAFNBEKP []interface{} `json:"FKDJAFNBEKP"`
	IKOMMBICGHC string        `json:"IKOMMBICGHC"`
	KPKNMIDELCP float64       `json:"KPKNMIDELCP"`
	LCNGGPOILCF hash.Hash     `json:"LCNGGPOILCF"`
	LLEPHOELGDA []interface{} `json:"LLEPHOELGDA"`
	MGBFCKPOHDD float64       `json:"MGBFCKPOHDD"`
	NIHMKDADFFL float64       `json:"NIHMKDADFFL"`
	PLALJGHIEOD hash.Hash     `json:"PLALJGHIEOD"`
}
type FateMasterTalkAccessor struct {
	_data            []FateMasterTalk
	_dataMGBFCKPOHDD map[float64]FateMasterTalk
}

// LoadData retrieves the data. Must be called before FateMasterTalk.GroupData
func (a *FateMasterTalkAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/FateMasterTalk.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *FateMasterTalkAccessor) Raw() ([]FateMasterTalk, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []FateMasterTalk{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with FateMasterTalkAccessor.LoadData to preload everything
func (a *FateMasterTalkAccessor) GroupData() {
	a._dataMGBFCKPOHDD = map[float64]FateMasterTalk{}
	for _, d := range a._data {
		a._dataMGBFCKPOHDD[d.MGBFCKPOHDD] = d
	}
}

// ByMGBFCKPOHDD returns the FateMasterTalk uniquely identified by MGBFCKPOHDD
//
// Error is only non-nil if the source errors out
func (a *FateMasterTalkAccessor) ByMGBFCKPOHDD(identifier float64) (FateMasterTalk, error) {
	if a._dataMGBFCKPOHDD == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return FateMasterTalk{}, err
			}
		}
		a.GroupData()
	}
	return a._dataMGBFCKPOHDD[identifier], nil
}
