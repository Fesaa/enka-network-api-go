package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesGachaBasic struct {
	CostGemNum             json.Number   `json:"CostGemNum"`
	CostItemID             json.Number   `json:"CostItemID"`
	GachaID                json.Number   `json:"GachaID"`
	GachaType              string        `json:"GachaType"`
	MultiGachaCount        json.Number   `json:"MultiGachaCount"`
	MultiGachaUnlockIDList []json.Number `json:"MultiGachaUnlockIDList"`
	UnlockIDList           []json.Number `json:"UnlockIDList"`
}
type PlanetFesGachaBasicAccessor struct {
	_data []PlanetFesGachaBasic
}

// LoadData retrieves the data. Must be called before PlanetFesGachaBasic.GroupData
func (a *PlanetFesGachaBasicAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesGachaBasic.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesGachaBasicAccessor) Raw() ([]PlanetFesGachaBasic, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesGachaBasic{}, err
		}
	}
	return a._data, nil
}
