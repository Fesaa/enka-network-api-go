package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type RogueTournTitanType struct {
	CharacterName                  hash.Hash `json:"CharacterName"`
	RogueTitanAvatarRoundIconMid   string    `json:"RogueTitanAvatarRoundIconMid"`
	RogueTitanAvatarRoundIconSmall string    `json:"RogueTitanAvatarRoundIconSmall"`
	RogueTitanCardIcon             string    `json:"RogueTitanCardIcon"`
	RogueTitanCardShadowIcon       string    `json:"RogueTitanCardShadowIcon"`
	RogueTitanCategory             string    `json:"RogueTitanCategory"`
	RogueTitanTalentIcon           string    `json:"RogueTitanTalentIcon"`
	RogueTitanType                 string    `json:"RogueTitanType"`
	TitanTitle                     hash.Hash `json:"TitanTitle"`
}
type RogueTournTitanTypeAccessor struct {
	_data                     []RogueTournTitanType
	_dataRogueTitanTalentIcon map[string]RogueTournTitanType
	_dataRogueTitanType       map[string]RogueTournTitanType
}

// LoadData retrieves the data. Must be called before RogueTournTitanType.GroupData
func (a *RogueTournTitanTypeAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueTournTitanType.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueTournTitanTypeAccessor) Raw() ([]RogueTournTitanType, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueTournTitanType{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with RogueTournTitanTypeAccessor.LoadData to preload everything
func (a *RogueTournTitanTypeAccessor) GroupData() {
	for _, d := range a._data {
		a._dataRogueTitanTalentIcon[d.RogueTitanTalentIcon] = d
		a._dataRogueTitanType[d.RogueTitanType] = d
	}
}

// ByRogueTitanTalentIcon returns the RogueTournTitanType uniquely identified by RogueTitanTalentIcon
//
// Error is only non-nil if the source errors out
func (a *RogueTournTitanTypeAccessor) ByRogueTitanTalentIcon(identifier string) (RogueTournTitanType, error) {
	if a._dataRogueTitanTalentIcon == nil {
		err := a.LoadData()
		if err != nil {
			return RogueTournTitanType{}, err
		}
		a.GroupData()
	}
	return a._dataRogueTitanTalentIcon[identifier], nil
}

// ByRogueTitanType returns the RogueTournTitanType uniquely identified by RogueTitanType
//
// Error is only non-nil if the source errors out
func (a *RogueTournTitanTypeAccessor) ByRogueTitanType(identifier string) (RogueTournTitanType, error) {
	if a._dataRogueTitanType == nil {
		err := a.LoadData()
		if err != nil {
			return RogueTournTitanType{}, err
		}
		a.GroupData()
	}
	return a._dataRogueTitanType[identifier], nil
}
