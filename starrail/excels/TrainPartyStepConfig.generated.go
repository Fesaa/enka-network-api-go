package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type TrainPartyStepConfig struct {
	CoinCost         json.Number            `json:"CoinCost"`
	GroupID          json.Number            `json:"GroupID"`
	HasCutScene      bool                   `json:"HasCutScene"`
	HasPreview       bool                   `json:"HasPreview"`
	ID               json.Number            `json:"ID"`
	ImgPath          string                 `json:"ImgPath"`
	Name             map[string]json.Number `json:"Name"`
	SortID           json.Number            `json:"SortID"`
	StaticPropIDList []json.Number          `json:"StaticPropIDList"`
}
type TrainPartyStepConfigAccessor struct {
	_data []TrainPartyStepConfig
}

// LoadData retrieves the data. Must be called before TrainPartyStepConfig.GroupData
func (a *TrainPartyStepConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainPartyStepConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainPartyStepConfigAccessor) Raw() ([]TrainPartyStepConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainPartyStepConfig{}, err
		}
	}
	return a._data, nil
}
