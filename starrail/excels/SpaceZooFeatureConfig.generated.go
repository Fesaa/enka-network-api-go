package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type SpaceZooFeatureConfig struct {
	Channel        string                 `json:"Channel"`
	FeatureID      json.Number            `json:"FeatureID"`
	FeatureKey     string                 `json:"FeatureKey"`
	ImagePath      string                 `json:"ImagePath"`
	LargeImagePath string                 `json:"LargeImagePath"`
	Name           map[string]json.Number `json:"Name"`
	ResearchPoint  json.Number            `json:"ResearchPoint"`
}
type SpaceZooFeatureConfigAccessor struct {
	_data          []SpaceZooFeatureConfig
	_dataFeatureID map[json.Number]SpaceZooFeatureConfig
}

// LoadData retrieves the data. Must be called before SpaceZooFeatureConfig.GroupData
func (a *SpaceZooFeatureConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SpaceZooFeatureConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SpaceZooFeatureConfigAccessor) Raw() ([]SpaceZooFeatureConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SpaceZooFeatureConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with SpaceZooFeatureConfigAccessor.LoadData to preload everything
func (a *SpaceZooFeatureConfigAccessor) GroupData() {
	a._dataFeatureID = map[json.Number]SpaceZooFeatureConfig{}
	for _, d := range a._data {
		a._dataFeatureID[d.FeatureID] = d
	}
}

// ByFeatureID returns the SpaceZooFeatureConfig uniquely identified by FeatureID
//
// Error is only non-nil if the source errors out
func (a *SpaceZooFeatureConfigAccessor) ByFeatureID(identifier json.Number) (SpaceZooFeatureConfig, error) {
	if a._dataFeatureID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return SpaceZooFeatureConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFeatureID[identifier], nil
}
