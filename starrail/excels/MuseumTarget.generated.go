package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MuseumTarget struct {
	MuseumMissionList []json.Number `json:"MuseumMissionList"`
	Order             json.Number   `json:"Order"`
	RewardType        string        `json:"RewardType"`
	TargetID          json.Number   `json:"TargetID"`
	TriggerPhase      json.Number   `json:"TriggerPhase"`
	TriggerTurns      json.Number   `json:"TriggerTurns"`
	TypeParameter     json.Number   `json:"TypeParameter"`
}
type MuseumTargetAccessor struct {
	_data []MuseumTarget
}

// LoadData retrieves the data. Must be called before MuseumTarget.GroupData
func (a *MuseumTargetAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MuseumTarget.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MuseumTargetAccessor) Raw() ([]MuseumTarget, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MuseumTarget{}, err
		}
	}
	return a._data, nil
}
