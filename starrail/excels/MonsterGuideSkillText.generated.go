package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type MonsterGuideSkillText struct {
	Difficulty       json.Number            `json:"Difficulty"`
	EffectIDList     []json.Number          `json:"EffectIDList"`
	ParameterList    []interface{}          `json:"ParameterList"`
	SkillDescription map[string]json.Number `json:"SkillDescription"`
	SkillTextID      json.Number            `json:"SkillTextID"`
}
type MonsterGuideSkillTextAccessor struct {
	_data            []MonsterGuideSkillText
	_dataSkillTextID map[json.Number]MonsterGuideSkillText
}

// LoadData retrieves the data. Must be called before MonsterGuideSkillText.GroupData
func (a *MonsterGuideSkillTextAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MonsterGuideSkillText.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MonsterGuideSkillTextAccessor) Raw() ([]MonsterGuideSkillText, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MonsterGuideSkillText{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with MonsterGuideSkillTextAccessor.LoadData to preload everything
func (a *MonsterGuideSkillTextAccessor) GroupData() {
	a._dataSkillTextID = map[json.Number]MonsterGuideSkillText{}
	for _, d := range a._data {
		a._dataSkillTextID[d.SkillTextID] = d
	}
}

// BySkillTextID returns the MonsterGuideSkillText uniquely identified by SkillTextID
//
// Error is only non-nil if the source errors out
func (a *MonsterGuideSkillTextAccessor) BySkillTextID(identifier json.Number) (MonsterGuideSkillText, error) {
	if a._dataSkillTextID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return MonsterGuideSkillText{}, err
			}
		}
		a.GroupData()
	}
	return a._dataSkillTextID[identifier], nil
}
