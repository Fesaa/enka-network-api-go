package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueHandBookEvent struct {
	EventHandbookID         json.Number              `json:"EventHandbookID"`
	EventReward             json.Number              `json:"EventReward"`
	EventTitle              map[string]json.Number   `json:"EventTitle"`
	EventType               map[string]json.Number   `json:"EventType"`
	EventTypeList           []json.Number            `json:"EventTypeList"`
	ImageID                 json.Number              `json:"ImageID"`
	Order                   json.Number              `json:"Order"`
	UnlockHintDesc          map[string]json.Number   `json:"UnlockHintDesc"`
	UnlockNPCProgressIDList []map[string]json.Number `json:"UnlockNPCProgressIDList"`
}
type RogueHandBookEventAccessor struct {
	_data []RogueHandBookEvent
}

// LoadData retrieves the data. Must be called before RogueHandBookEvent.GroupData
func (a *RogueHandBookEventAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueHandBookEvent.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueHandBookEventAccessor) Raw() ([]RogueHandBookEvent, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueHandBookEvent{}, err
		}
	}
	return a._data, nil
}
