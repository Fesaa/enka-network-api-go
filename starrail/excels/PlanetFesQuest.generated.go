package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type PlanetFesQuest struct {
	Description    map[string]json.Number   `json:"Description"`
	FinishwayID    json.Number              `json:"FinishwayID"`
	ID             json.Number              `json:"ID"`
	IconPath       string                   `json:"IconPath"`
	Name           map[string]json.Number   `json:"Name"`
	QuestType      string                   `json:"QuestType"`
	RewardItemList []map[string]json.Number `json:"RewardItemList"`
}
type PlanetFesQuestAccessor struct {
	_data            []PlanetFesQuest
	_dataFinishwayID map[json.Number]PlanetFesQuest
	_dataID          map[json.Number]PlanetFesQuest
}

// LoadData retrieves the data. Must be called before PlanetFesQuest.GroupData
func (a *PlanetFesQuestAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesQuest.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesQuestAccessor) Raw() ([]PlanetFesQuest, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesQuest{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with PlanetFesQuestAccessor.LoadData to preload everything
func (a *PlanetFesQuestAccessor) GroupData() {
	a._dataFinishwayID = map[json.Number]PlanetFesQuest{}
	a._dataID = map[json.Number]PlanetFesQuest{}
	for _, d := range a._data {
		a._dataFinishwayID[d.FinishwayID] = d
		a._dataID[d.ID] = d
	}
}

// ByFinishwayID returns the PlanetFesQuest uniquely identified by FinishwayID
//
// Error is only non-nil if the source errors out
func (a *PlanetFesQuestAccessor) ByFinishwayID(identifier json.Number) (PlanetFesQuest, error) {
	if a._dataFinishwayID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return PlanetFesQuest{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFinishwayID[identifier], nil
}

// ByID returns the PlanetFesQuest uniquely identified by ID
//
// Error is only non-nil if the source errors out
func (a *PlanetFesQuestAccessor) ByID(identifier json.Number) (PlanetFesQuest, error) {
	if a._dataID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return PlanetFesQuest{}, err
			}
		}
		a.GroupData()
	}
	return a._dataID[identifier], nil
}
