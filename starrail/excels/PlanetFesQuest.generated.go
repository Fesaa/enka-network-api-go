package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PlanetFesQuest struct {
	Description    map[string]json.Number   `json:"Description"`
	FinishwayID    json.Number              `json:"FinishwayID"`
	ID             json.Number              `json:"ID"`
	IconPath       string                   `json:"IconPath"`
	Name           map[string]json.Number   `json:"Name"`
	QuestType      string                   `json:"QuestType"`
	RewardItemList []map[string]json.Number `json:"RewardItemList"`
}
type PlanetFesQuestAccessor struct {
	_data []PlanetFesQuest
}

// LoadData retrieves the data. Must be called before PlanetFesQuest.GroupData
func (a *PlanetFesQuestAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesQuest.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesQuestAccessor) Raw() ([]PlanetFesQuest, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesQuest{}, err
		}
	}
	return a._data, nil
}
