package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RaidConfig struct {
	AutoObtainDamageType     bool                     `json:"AutoObtainDamageType"`
	BuffDesc                 map[string]json.Number   `json:"BuffDesc"`
	BuffParamList            []map[string]json.Number `json:"BuffParamList"`
	DamageType               []string                 `json:"DamageType"`
	DifficultyAdjustmentType json.Number              `json:"DifficultyAdjustmentType"`
	DisplayEventID           json.Number              `json:"DisplayEventID"`
	EnterType                string                   `json:"EnterType"`
	EntrancePageBGImagePath  string                   `json:"EntrancePageBGImagePath"`
	FinishEntranceID         json.Number              `json:"FinishEntranceID"`
	HardLevel                json.Number              `json:"HardLevel"`
	IsEntryByProp            bool                     `json:"IsEntryByProp"`
	IsHiddenAreaMap          bool                     `json:"IsHiddenAreaMap"`
	LimitIDList              []json.Number            `json:"LimitIDList"`
	LockCaptain              bool                     `json:"LockCaptain"`
	LockCaptainAvatarID      json.Number              `json:"LockCaptainAvatarID"`
	MainMissionIDAfter       json.Number              `json:"MainMissionIDAfter"`
	MainMissionIDBefore      json.Number              `json:"MainMissionIDBefore"`
	MainMissionIDList        []json.Number            `json:"MainMissionIDList"`
	MappingInfoID            json.Number              `json:"MappingInfoID"`
	MonsterHideList          []json.Number            `json:"MonsterHideList"`
	MonsterList              []json.Number            `json:"MonsterList"`
	RaidDesc                 map[string]json.Number   `json:"RaidDesc"`
	RaidID                   json.Number              `json:"RaidID"`
	RaidName                 map[string]json.Number   `json:"RaidName"`
	RaidTagList              []string                 `json:"RaidTagList"`
	RaidTargetID             []json.Number            `json:"RaidTargetID"`
	RecoverType              []string                 `json:"RecoverType"`
	RewardList               []json.Number            `json:"RewardList"`
	SkipRewardOnFinish       bool                     `json:"SkipRewardOnFinish"`
	TeamLimitIDList          []json.Number            `json:"TeamLimitIDList"`
	TeamType                 string                   `json:"TeamType"`
	TrialAvatarList          []json.Number            `json:"TrialAvatarList"`
	Type                     string                   `json:"Type"`
	UnlockWorldLevel         []json.Number            `json:"UnlockWorldLevel"`
}
type RaidConfigAccessor struct {
	_data []RaidConfig
}

// LoadData retrieves the data. Must be called before RaidConfig.GroupData
func (a *RaidConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RaidConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RaidConfigAccessor) Raw() ([]RaidConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RaidConfig{}, err
		}
	}
	return a._data, nil
}
