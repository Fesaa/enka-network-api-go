package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type RaidConfig struct {
	AutoObtainDamageType     bool            `json:"AutoObtainDamageType"`
	BuffDesc                 hash.Hash       `json:"BuffDesc"`
	BuffParamList            []hash.IntValue `json:"BuffParamList"`
	DamageType               []string        `json:"DamageType"`
	DifficultyAdjustmentType float64         `json:"DifficultyAdjustmentType"`
	DisplayEventID           float64         `json:"DisplayEventID"`
	EnterType                string          `json:"EnterType"`
	EntrancePageBGImagePath  string          `json:"EntrancePageBGImagePath"`
	FinishEntranceID         float64         `json:"FinishEntranceID"`
	HardLevel                float64         `json:"HardLevel"`
	IsEntryByProp            bool            `json:"IsEntryByProp"`
	IsHiddenAreaMap          bool            `json:"IsHiddenAreaMap"`
	LimitIDList              []float64       `json:"LimitIDList"`
	LockCaptain              bool            `json:"LockCaptain"`
	LockCaptainAvatarID      float64         `json:"LockCaptainAvatarID"`
	MainMissionIDAfter       float64         `json:"MainMissionIDAfter"`
	MainMissionIDBefore      float64         `json:"MainMissionIDBefore"`
	MainMissionIDList        []float64       `json:"MainMissionIDList"`
	MappingInfoID            float64         `json:"MappingInfoID"`
	MonsterHideList          []float64       `json:"MonsterHideList"`
	MonsterList              []float64       `json:"MonsterList"`
	RaidDesc                 hash.Hash       `json:"RaidDesc"`
	RaidID                   float64         `json:"RaidID"`
	RaidName                 hash.Hash       `json:"RaidName"`
	RaidTagList              []string        `json:"RaidTagList"`
	RaidTargetID             []float64       `json:"RaidTargetID"`
	RecoverType              []string        `json:"RecoverType"`
	RewardList               []float64       `json:"RewardList"`
	SkipRewardOnFinish       bool            `json:"SkipRewardOnFinish"`
	TeamLimitIDList          []float64       `json:"TeamLimitIDList"`
	TeamType                 string          `json:"TeamType"`
	TrialAvatarList          []float64       `json:"TrialAvatarList"`
	Type                     string          `json:"Type"`
	UnlockWorldLevel         []float64       `json:"UnlockWorldLevel"`
}
type RaidConfigAccessor struct {
	_data []RaidConfig
}

// LoadData retrieves the data. Must be called before RaidConfig.GroupData
func (a *RaidConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RaidConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RaidConfigAccessor) Raw() ([]RaidConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RaidConfig{}, err
		}
	}
	return a._data, nil
}
