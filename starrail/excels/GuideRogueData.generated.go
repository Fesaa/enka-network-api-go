package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type GuideRogueData struct {
	ID               json.Number                    `json:"ID"`
	IconPath         string                         `json:"IconPath"`
	Name             map[string]json.Number         `json:"Name"`
	OpenConditions   []GuideRogueDataOpenConditions `json:"OpenConditions"`
	Priority         json.Number                    `json:"Priority"`
	RelatedID        json.Number                    `json:"RelatedID"`
	TabID            json.Number                    `json:"TabID"`
	TabIconPath      string                         `json:"TabIconPath"`
	UnlockConditions []interface{}                  `json:"UnlockConditions"`
}
type GuideRogueDataOpenConditions struct {
	Param string `json:"Param"`
	Type  string `json:"Type"`
}
type GuideRogueDataAccessor struct {
	_data []GuideRogueData
}

// LoadData retrieves the data. Must be called before GuideRogueData.GroupData
func (a *GuideRogueDataAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/GuideRogueData.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *GuideRogueDataAccessor) Raw() ([]GuideRogueData, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []GuideRogueData{}, err
		}
	}
	return a._data, nil
}
