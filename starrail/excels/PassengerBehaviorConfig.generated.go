package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PassengerBehaviorConfig struct {
	AnchorID          json.Number `json:"AnchorID"`
	BehaviorID        json.Number `json:"BehaviorID"`
	FloorID           json.Number `json:"FloorID"`
	NPCGroupID        json.Number `json:"NPCGroupID"`
	NPCID             json.Number `json:"NPCID"`
	NPCOverrideConfig string      `json:"NPCOverrideConfig"`
}
type PassengerBehaviorConfigAccessor struct {
	_data                  []PassengerBehaviorConfig
	_dataNPCOverrideConfig map[string]PassengerBehaviorConfig
}

// LoadData retrieves the data. Must be called before PassengerBehaviorConfig.GroupData
func (a *PassengerBehaviorConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PassengerBehaviorConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PassengerBehaviorConfigAccessor) Raw() ([]PassengerBehaviorConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PassengerBehaviorConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with PassengerBehaviorConfigAccessor.LoadData to preload everything
func (a *PassengerBehaviorConfigAccessor) GroupData() {
	a._dataNPCOverrideConfig = map[string]PassengerBehaviorConfig{}
	for _, d := range a._data {
		a._dataNPCOverrideConfig[d.NPCOverrideConfig] = d
	}
}

// ByNPCOverrideConfig returns the PassengerBehaviorConfig uniquely identified by NPCOverrideConfig
//
// Error is only non-nil if the source errors out
func (a *PassengerBehaviorConfigAccessor) ByNPCOverrideConfig(identifier string) (PassengerBehaviorConfig, error) {
	if a._dataNPCOverrideConfig == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return PassengerBehaviorConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataNPCOverrideConfig[identifier], nil
}
