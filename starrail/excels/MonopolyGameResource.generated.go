package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MonopolyGameResource struct {
	IconOutlinePath string      `json:"IconOutlinePath"`
	IconPath        string      `json:"IconPath"`
	ResourceID      json.Number `json:"ResourceID"`
	ResourceNum     json.Number `json:"ResourceNum"`
	RuleIconPath    string      `json:"RuleIconPath"`
}
type MonopolyGameResourceAccessor struct {
	_data []MonopolyGameResource
}

// LoadData retrieves the data. Must be called before MonopolyGameResource.GroupData
func (a *MonopolyGameResourceAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MonopolyGameResource.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MonopolyGameResourceAccessor) Raw() ([]MonopolyGameResource, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MonopolyGameResource{}, err
		}
	}
	return a._data, nil
}
