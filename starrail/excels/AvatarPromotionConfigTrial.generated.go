package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type AvatarPromotionConfigTrial struct {
	AttackAdd          hash.IntValue                                 `json:"AttackAdd"`
	AttackBase         hash.IntValue                                 `json:"AttackBase"`
	AvatarID           float64                                       `json:"AvatarID"`
	BaseAggro          hash.IntValue                                 `json:"BaseAggro"`
	CriticalChance     hash.IntValue                                 `json:"CriticalChance"`
	CriticalDamage     hash.IntValue                                 `json:"CriticalDamage"`
	DefenceAdd         hash.IntValue                                 `json:"DefenceAdd"`
	DefenceBase        hash.IntValue                                 `json:"DefenceBase"`
	HPAdd              hash.IntValue                                 `json:"HPAdd"`
	HPBase             hash.IntValue                                 `json:"HPBase"`
	MaxLevel           float64                                       `json:"MaxLevel"`
	PlayerLevelRequire float64                                       `json:"PlayerLevelRequire"`
	Promotion          float64                                       `json:"Promotion"`
	PromotionCostList  []AvatarPromotionConfigTrialPromotionCostList `json:"PromotionCostList"`
	SpeedBase          hash.IntValue                                 `json:"SpeedBase"`
	WorldLevelRequire  float64                                       `json:"WorldLevelRequire"`
}
type AvatarPromotionConfigTrialPromotionCostList struct {
	ItemID  float64 `json:"ItemID"`
	ItemNum float64 `json:"ItemNum"`
}
type AvatarPromotionConfigTrialAccessor struct {
	_data []AvatarPromotionConfigTrial
}

// LoadData retrieves the data. Must be called before AvatarPromotionConfigTrial.GroupData
func (a *AvatarPromotionConfigTrialAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarPromotionConfigTrial.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarPromotionConfigTrialAccessor) Raw() ([]AvatarPromotionConfigTrial, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarPromotionConfigTrial{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}
