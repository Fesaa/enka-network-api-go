package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type AvatarPromotionConfigTrial struct {
	AttackAdd          map[string]json.Number   `json:"AttackAdd"`
	AttackBase         map[string]json.Number   `json:"AttackBase"`
	AvatarID           json.Number              `json:"AvatarID"`
	BaseAggro          map[string]json.Number   `json:"BaseAggro"`
	CriticalChance     map[string]json.Number   `json:"CriticalChance"`
	CriticalDamage     map[string]json.Number   `json:"CriticalDamage"`
	DefenceAdd         map[string]json.Number   `json:"DefenceAdd"`
	DefenceBase        map[string]json.Number   `json:"DefenceBase"`
	HPAdd              map[string]json.Number   `json:"HPAdd"`
	HPBase             map[string]json.Number   `json:"HPBase"`
	MaxLevel           json.Number              `json:"MaxLevel"`
	PlayerLevelRequire json.Number              `json:"PlayerLevelRequire"`
	Promotion          json.Number              `json:"Promotion"`
	PromotionCostList  []map[string]json.Number `json:"PromotionCostList"`
	SpeedBase          map[string]json.Number   `json:"SpeedBase"`
	WorldLevelRequire  json.Number              `json:"WorldLevelRequire"`
}
type AvatarPromotionConfigTrialAccessor struct {
	_data []AvatarPromotionConfigTrial
}

// LoadData retrieves the data. Must be called before AvatarPromotionConfigTrial.GroupData
func (a *AvatarPromotionConfigTrialAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarPromotionConfigTrial.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarPromotionConfigTrialAccessor) Raw() ([]AvatarPromotionConfigTrial, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarPromotionConfigTrial{}, err
		}
	}
	return a._data, nil
}
