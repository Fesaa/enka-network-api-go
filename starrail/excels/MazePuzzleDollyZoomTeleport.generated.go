package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MazePuzzleDollyZoomTeleport struct {
	FloorID            json.Number `json:"FloorID"`
	GroupID            json.Number `json:"GroupID"`
	ID                 json.Number `json:"ID"`
	InstanceIDA        json.Number `json:"InstanceIDA"`
	InstanceIDB        json.Number `json:"InstanceIDB"`
	OverrideInitFOV    json.Number `json:"OverrideInitFOV"`
	OverridePosA       json.Number `json:"OverridePosA"`
	OverridePosB       json.Number `json:"OverridePosB"`
	OverrideTargetPosA json.Number `json:"OverrideTargetPosA"`
	OverrideTargetPosB json.Number `json:"OverrideTargetPosB"`
	PuzzlePrefab       string      `json:"PuzzlePrefab"`
}
type MazePuzzleDollyZoomTeleportAccessor struct {
	_data []MazePuzzleDollyZoomTeleport
}

// LoadData retrieves the data. Must be called before MazePuzzleDollyZoomTeleport.GroupData
func (a *MazePuzzleDollyZoomTeleportAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MazePuzzleDollyZoomTeleport.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MazePuzzleDollyZoomTeleportAccessor) Raw() ([]MazePuzzleDollyZoomTeleport, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MazePuzzleDollyZoomTeleport{}, err
		}
	}
	return a._data, nil
}
