package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type RogueMap struct {
	IsStart        bool      `json:"IsStart"`
	NextSiteIDList []float64 `json:"NextSiteIDList"`
	PosX           float64   `json:"PosX"`
	PosY           float64   `json:"PosY"`
	RogueMapID     float64   `json:"RogueMapID"`
	SiteID         float64   `json:"SiteID"`
}
type RogueMapAccessor struct {
	_data []RogueMap
}

// LoadData retrieves the data. Must be called before RogueMap.GroupData
func (a *RogueMapAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueMap.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueMapAccessor) Raw() ([]RogueMap, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueMap{}, err
		}
	}
	return a._data, nil
}
