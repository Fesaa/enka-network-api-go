package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ActivitySummonSkill struct {
	SimpleSkillDesc     map[string]json.Number   `json:"SimpleSkillDesc"`
	SimpleSkillParmList []map[string]json.Number `json:"SimpleSkillParmList"`
	SkillDesc           map[string]json.Number   `json:"SkillDesc"`
	SkillID             json.Number              `json:"SkillID"`
	SkillIconPath       string                   `json:"SkillIconPath"`
	SkillName           map[string]json.Number   `json:"SkillName"`
	SkillParmList       []map[string]json.Number `json:"SkillParmList"`
	SkillTriggerKey     string                   `json:"SkillTriggerKey"`
	SkillType           string                   `json:"SkillType"`
}
type ActivitySummonSkillAccessor struct {
	_data []ActivitySummonSkill
}

// LoadData retrieves the data. Must be called before ActivitySummonSkill.GroupData
func (a *ActivitySummonSkillAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ActivitySummonSkill.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ActivitySummonSkillAccessor) Raw() ([]ActivitySummonSkill, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ActivitySummonSkill{}, err
		}
	}
	return a._data, nil
}
