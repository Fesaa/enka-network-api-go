package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type FindChestFuncData struct {
	ChestTypeList      []string      `json:"ChestTypeList"`
	FindNum            json.Number   `json:"FindNum"`
	FuncID             json.Number   `json:"FuncID"`
	GameModeList       []string      `json:"GameModeList"`
	MapIconID          json.Number   `json:"MapIconID"`
	MappingInfoID      json.Number   `json:"MappingInfoID"`
	SpecialMappinginfo json.Number   `json:"SpecialMappinginfo"`
	TriggerParamList   []json.Number `json:"TriggerParamList"`
	TriggerType        string        `json:"TriggerType"`
	WorldIDList        []json.Number `json:"WorldIDList"`
}
type FindChestFuncDataAccessor struct {
	_data []FindChestFuncData
}

// LoadData retrieves the data. Must be called before FindChestFuncData.GroupData
func (a *FindChestFuncDataAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/FindChestFuncData.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *FindChestFuncDataAccessor) Raw() ([]FindChestFuncData, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []FindChestFuncData{}, err
		}
	}
	return a._data, nil
}
