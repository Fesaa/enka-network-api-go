package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type ItemRarityConfig struct {
	AvatarShowBgPath      string `json:"AvatarShowBgPath"`
	FrameIconRarityPath   string `json:"FrameIconRarityPath"`
	FrameItemRarityBgPath string `json:"FrameItemRarityBgPath"`
	FrameItemRarityColor  string `json:"FrameItemRarityColor"`
	FrameItemRarityPath   string `json:"FrameItemRarityPath"`
	ItemRarityStarImgPath string `json:"ItemRarityStarImgPath"`
	ItemShowBgPath        string `json:"ItemShowBgPath"`
	LineItemRarityColor   string `json:"LineItemRarityColor"`
	Rarity                string `json:"Rarity"`
}
type ItemRarityConfigAccessor struct {
	_data                      []ItemRarityConfig
	_dataAvatarShowBgPath      map[string]ItemRarityConfig
	_dataFrameIconRarityPath   map[string]ItemRarityConfig
	_dataFrameItemRarityBgPath map[string]ItemRarityConfig
	_dataFrameItemRarityColor  map[string]ItemRarityConfig
	_dataFrameItemRarityPath   map[string]ItemRarityConfig
	_dataItemRarityStarImgPath map[string]ItemRarityConfig
	_dataItemShowBgPath        map[string]ItemRarityConfig
	_dataLineItemRarityColor   map[string]ItemRarityConfig
	_dataRarity                map[string]ItemRarityConfig
}

// LoadData retrieves the data. Must be called before ItemRarityConfig.GroupData
func (a *ItemRarityConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ItemRarityConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ItemRarityConfigAccessor) Raw() ([]ItemRarityConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ItemRarityConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with ItemRarityConfigAccessor.LoadData to preload everything
func (a *ItemRarityConfigAccessor) GroupData() {
	a._dataAvatarShowBgPath = map[string]ItemRarityConfig{}
	a._dataFrameIconRarityPath = map[string]ItemRarityConfig{}
	a._dataFrameItemRarityBgPath = map[string]ItemRarityConfig{}
	a._dataFrameItemRarityColor = map[string]ItemRarityConfig{}
	a._dataFrameItemRarityPath = map[string]ItemRarityConfig{}
	a._dataItemRarityStarImgPath = map[string]ItemRarityConfig{}
	a._dataItemShowBgPath = map[string]ItemRarityConfig{}
	a._dataLineItemRarityColor = map[string]ItemRarityConfig{}
	a._dataRarity = map[string]ItemRarityConfig{}
	for _, d := range a._data {
		a._dataAvatarShowBgPath[d.AvatarShowBgPath] = d
		a._dataFrameIconRarityPath[d.FrameIconRarityPath] = d
		a._dataFrameItemRarityBgPath[d.FrameItemRarityBgPath] = d
		a._dataFrameItemRarityColor[d.FrameItemRarityColor] = d
		a._dataFrameItemRarityPath[d.FrameItemRarityPath] = d
		a._dataItemRarityStarImgPath[d.ItemRarityStarImgPath] = d
		a._dataItemShowBgPath[d.ItemShowBgPath] = d
		a._dataLineItemRarityColor[d.LineItemRarityColor] = d
		a._dataRarity[d.Rarity] = d
	}
}

// ByAvatarShowBgPath returns the ItemRarityConfig uniquely identified by AvatarShowBgPath
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByAvatarShowBgPath(identifier string) (ItemRarityConfig, error) {
	if a._dataAvatarShowBgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataAvatarShowBgPath[identifier], nil
}

// ByFrameIconRarityPath returns the ItemRarityConfig uniquely identified by FrameIconRarityPath
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByFrameIconRarityPath(identifier string) (ItemRarityConfig, error) {
	if a._dataFrameIconRarityPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFrameIconRarityPath[identifier], nil
}

// ByFrameItemRarityBgPath returns the ItemRarityConfig uniquely identified by FrameItemRarityBgPath
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByFrameItemRarityBgPath(identifier string) (ItemRarityConfig, error) {
	if a._dataFrameItemRarityBgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFrameItemRarityBgPath[identifier], nil
}

// ByFrameItemRarityColor returns the ItemRarityConfig uniquely identified by FrameItemRarityColor
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByFrameItemRarityColor(identifier string) (ItemRarityConfig, error) {
	if a._dataFrameItemRarityColor == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFrameItemRarityColor[identifier], nil
}

// ByFrameItemRarityPath returns the ItemRarityConfig uniquely identified by FrameItemRarityPath
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByFrameItemRarityPath(identifier string) (ItemRarityConfig, error) {
	if a._dataFrameItemRarityPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataFrameItemRarityPath[identifier], nil
}

// ByItemRarityStarImgPath returns the ItemRarityConfig uniquely identified by ItemRarityStarImgPath
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByItemRarityStarImgPath(identifier string) (ItemRarityConfig, error) {
	if a._dataItemRarityStarImgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataItemRarityStarImgPath[identifier], nil
}

// ByItemShowBgPath returns the ItemRarityConfig uniquely identified by ItemShowBgPath
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByItemShowBgPath(identifier string) (ItemRarityConfig, error) {
	if a._dataItemShowBgPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataItemShowBgPath[identifier], nil
}

// ByLineItemRarityColor returns the ItemRarityConfig uniquely identified by LineItemRarityColor
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByLineItemRarityColor(identifier string) (ItemRarityConfig, error) {
	if a._dataLineItemRarityColor == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataLineItemRarityColor[identifier], nil
}

// ByRarity returns the ItemRarityConfig uniquely identified by Rarity
//
// Error is only non-nil if the source errors out
func (a *ItemRarityConfigAccessor) ByRarity(identifier string) (ItemRarityConfig, error) {
	if a._dataRarity == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return ItemRarityConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataRarity[identifier], nil
}
