package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RelicConfig struct {
	CoinCost       json.Number `json:"CoinCost"`
	ExpProvide     json.Number `json:"ExpProvide"`
	ExpType        json.Number `json:"ExpType"`
	ID             json.Number `json:"ID"`
	MainAffixGroup json.Number `json:"MainAffixGroup"`
	MaxLevel       json.Number `json:"MaxLevel"`
	Mode           string      `json:"Mode"`
	Rarity         string      `json:"Rarity"`
	SetID          json.Number `json:"SetID"`
	SubAffixGroup  json.Number `json:"SubAffixGroup"`
	Type           string      `json:"Type"`
}
type RelicConfigAccessor struct {
	_data []RelicConfig
}

// LoadData retrieves the data. Must be called before RelicConfig.GroupData
func (a *RelicConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RelicConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RelicConfigAccessor) Raw() ([]RelicConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RelicConfig{}, err
		}
	}
	return a._data, nil
}
