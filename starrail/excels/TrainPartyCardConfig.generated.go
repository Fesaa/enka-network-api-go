package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type TrainPartyCardConfig struct {
	CardActJson    string                 `json:"CardActJson"`
	CardEffectJson string                 `json:"CardEffectJson"`
	CardID         json.Number            `json:"CardID"`
	CardImage      string                 `json:"CardImage"`
	CardName       map[string]json.Number `json:"CardName"`
	PassengerID    json.Number            `json:"PassengerID"`
	Rarity         json.Number            `json:"Rarity"`
}
type TrainPartyCardConfigAccessor struct {
	_data       []TrainPartyCardConfig
	_dataCardID map[json.Number]TrainPartyCardConfig
}

// LoadData retrieves the data. Must be called before TrainPartyCardConfig.GroupData
func (a *TrainPartyCardConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainPartyCardConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainPartyCardConfigAccessor) Raw() ([]TrainPartyCardConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainPartyCardConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with TrainPartyCardConfigAccessor.LoadData to preload everything
func (a *TrainPartyCardConfigAccessor) GroupData() {
	a._dataCardID = map[json.Number]TrainPartyCardConfig{}
	for _, d := range a._data {
		a._dataCardID[d.CardID] = d
	}
}

// ByCardID returns the TrainPartyCardConfig uniquely identified by CardID
//
// Error is only non-nil if the source errors out
func (a *TrainPartyCardConfigAccessor) ByCardID(identifier json.Number) (TrainPartyCardConfig, error) {
	if a._dataCardID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TrainPartyCardConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCardID[identifier], nil
}
