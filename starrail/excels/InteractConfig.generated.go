package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type InteractConfig struct {
	InteractCostType string                   `json:"InteractCostType"`
	InteractDesc     map[string]json.Number   `json:"InteractDesc"`
	InteractID       json.Number              `json:"InteractID"`
	IsEvent          bool                     `json:"IsEvent"`
	ItemCostList     []map[string]json.Number `json:"ItemCostList"`
	SrcState         string                   `json:"SrcState"`
	TargetState      string                   `json:"TargetState"`
}
type InteractConfigAccessor struct {
	_data []InteractConfig
}

// LoadData retrieves the data. Must be called before InteractConfig.GroupData
func (a *InteractConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/InteractConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *InteractConfigAccessor) Raw() ([]InteractConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []InteractConfig{}, err
		}
	}
	return a._data, nil
}
