package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type InteractConfig struct {
	InteractCostType string                   `json:"InteractCostType"`
	InteractDesc     map[string]json.Number   `json:"InteractDesc"`
	InteractID       json.Number              `json:"InteractID"`
	IsEvent          bool                     `json:"IsEvent"`
	ItemCostList     []map[string]json.Number `json:"ItemCostList"`
	SrcState         string                   `json:"SrcState"`
	TargetState      string                   `json:"TargetState"`
}
type InteractConfigAccessor struct {
	_data           []InteractConfig
	_dataInteractID map[json.Number]InteractConfig
}

// LoadData retrieves the data. Must be called before InteractConfig.GroupData
func (a *InteractConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/InteractConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *InteractConfigAccessor) Raw() ([]InteractConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []InteractConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with InteractConfigAccessor.LoadData to preload everything
func (a *InteractConfigAccessor) GroupData() {
	a._dataInteractID = map[json.Number]InteractConfig{}
	for _, d := range a._data {
		a._dataInteractID[d.InteractID] = d
	}
}

// ByInteractID returns the InteractConfig uniquely identified by InteractID
//
// Error is only non-nil if the source errors out
func (a *InteractConfigAccessor) ByInteractID(identifier json.Number) (InteractConfig, error) {
	if a._dataInteractID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return InteractConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataInteractID[identifier], nil
}
