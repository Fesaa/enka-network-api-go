package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type EvoBdSCGearConfig struct {
	DynamicIndexList []float64 `json:"DynamicIndexList"`
	GearID           float64   `json:"GearID"`
	IndexList        []float64 `json:"IndexList"`
	Level            float64   `json:"Level"`
	MazeBuffID       float64   `json:"MazeBuffID"`
	SimpIndexList    []float64 `json:"SimpIndexList"`
	Type             string    `json:"Type"`
}
type EvoBdSCGearConfigAccessor struct {
	_data []EvoBdSCGearConfig
}

// LoadData retrieves the data. Must be called before EvoBdSCGearConfig.GroupData
func (a *EvoBdSCGearConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/EvoBdSCGearConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *EvoBdSCGearConfigAccessor) Raw() ([]EvoBdSCGearConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []EvoBdSCGearConfig{}, err
		}
	}
	return a._data, nil
}
