package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type TrainPartyGridTutorial struct {
	IKFENEEPFKL string  `json:"IKFENEEPFKL"`
	PDPALBOHGAA float64 `json:"PDPALBOHGAA"`
	PMKGKOIBKNO float64 `json:"PMKGKOIBKNO"`
}
type TrainPartyGridTutorialAccessor struct {
	_data            []TrainPartyGridTutorial
	_dataIKFENEEPFKL map[string]TrainPartyGridTutorial
	_dataPDPALBOHGAA map[float64]TrainPartyGridTutorial
}

// LoadData retrieves the data. Must be called before TrainPartyGridTutorial.GroupData
func (a *TrainPartyGridTutorialAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainPartyGridTutorial.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainPartyGridTutorialAccessor) Raw() ([]TrainPartyGridTutorial, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainPartyGridTutorial{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with TrainPartyGridTutorialAccessor.LoadData to preload everything
func (a *TrainPartyGridTutorialAccessor) GroupData() {
	for _, d := range a._data {
		a._dataIKFENEEPFKL[d.IKFENEEPFKL] = d
		a._dataPDPALBOHGAA[d.PDPALBOHGAA] = d
	}
}

// ByIKFENEEPFKL returns the TrainPartyGridTutorial uniquely identified by IKFENEEPFKL
//
// Error is only non-nil if the source errors out
func (a *TrainPartyGridTutorialAccessor) ByIKFENEEPFKL(identifier string) (TrainPartyGridTutorial, error) {
	if a._dataIKFENEEPFKL == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TrainPartyGridTutorial{}, err
			}
		}
		a.GroupData()
	}
	return a._dataIKFENEEPFKL[identifier], nil
}

// ByPDPALBOHGAA returns the TrainPartyGridTutorial uniquely identified by PDPALBOHGAA
//
// Error is only non-nil if the source errors out
func (a *TrainPartyGridTutorialAccessor) ByPDPALBOHGAA(identifier float64) (TrainPartyGridTutorial, error) {
	if a._dataPDPALBOHGAA == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TrainPartyGridTutorial{}, err
			}
		}
		a.GroupData()
	}
	return a._dataPDPALBOHGAA[identifier], nil
}
