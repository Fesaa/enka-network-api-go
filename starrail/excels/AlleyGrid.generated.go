package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type AlleyGrid struct {
	GridDesc           map[string]json.Number `json:"GridDesc"`
	GridID             json.Number            `json:"GridID"`
	GridIcon           string                 `json:"GridIcon"`
	GridTitle          map[string]json.Number `json:"GridTitle"`
	GridType           string                 `json:"GridType"`
	RelatedEventID     json.Number            `json:"RelatedEventID"`
	RelatedMainMission json.Number            `json:"RelatedMainMission"`
	ShopInfoIcon       string                 `json:"ShopInfoIcon"`
}
type AlleyGridAccessor struct {
	_data []AlleyGrid
}

// LoadData retrieves the data. Must be called before AlleyGrid.GroupData
func (a *AlleyGridAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AlleyGrid.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AlleyGridAccessor) Raw() ([]AlleyGrid, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AlleyGrid{}, err
		}
	}
	return a._data, nil
}
