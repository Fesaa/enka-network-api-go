package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MatchThreePVPScore struct {
	Desc       map[string]json.Number `json:"Desc"`
	FinishType string                 `json:"FinishType"`
	FixedScore json.Number            `json:"FixedScore"`
	Param1     json.Number            `json:"Param1"`
	Param2     json.Number            `json:"Param2"`
	Rarity     string                 `json:"Rarity"`
	ScoreID    json.Number            `json:"ScoreID"`
	Title      map[string]json.Number `json:"Title"`
	Title2     map[string]json.Number `json:"Title2"`
	Type       string                 `json:"Type"`
}
type MatchThreePVPScoreAccessor struct {
	_data []MatchThreePVPScore
}

// LoadData retrieves the data. Must be called before MatchThreePVPScore.GroupData
func (a *MatchThreePVPScoreAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MatchThreePVPScore.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MatchThreePVPScoreAccessor) Raw() ([]MatchThreePVPScore, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MatchThreePVPScore{}, err
		}
	}
	return a._data, nil
}
