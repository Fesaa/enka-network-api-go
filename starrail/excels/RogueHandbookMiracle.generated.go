package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueHandbookMiracle struct {
	MiracleDisplayID       json.Number   `json:"MiracleDisplayID"`
	MiracleEffectDisplayID json.Number   `json:"MiracleEffectDisplayID"`
	MiracleHandbookID      json.Number   `json:"MiracleHandbookID"`
	MiracleReward          json.Number   `json:"MiracleReward"`
	MiracleTypeList        []json.Number `json:"MiracleTypeList"`
	Order                  json.Number   `json:"Order"`
}
type RogueHandbookMiracleAccessor struct {
	_data []RogueHandbookMiracle
}

// LoadData retrieves the data. Must be called before RogueHandbookMiracle.GroupData
func (a *RogueHandbookMiracleAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueHandbookMiracle.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueHandbookMiracleAccessor) Raw() ([]RogueHandbookMiracle, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueHandbookMiracle{}, err
		}
	}
	return a._data, nil
}
