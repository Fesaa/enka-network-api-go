package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type EvoBdSCCardType struct {
	CardBuffItemBgBig   string `json:"CardBuffItemBgBig"`
	CardBuffItemBgMid   string `json:"CardBuffItemBgMid"`
	CardBuffItemBgSmall string `json:"CardBuffItemBgSmall"`
	Season              string `json:"Season"`
	Type                string `json:"Type"`
}
type EvoBdSCCardTypeAccessor struct {
	_data                    []EvoBdSCCardType
	_dataCardBuffItemBgBig   map[string]EvoBdSCCardType
	_dataCardBuffItemBgMid   map[string]EvoBdSCCardType
	_dataCardBuffItemBgSmall map[string]EvoBdSCCardType
}

// LoadData retrieves the data. Must be called before EvoBdSCCardType.GroupData
func (a *EvoBdSCCardTypeAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/EvoBdSCCardType.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *EvoBdSCCardTypeAccessor) Raw() ([]EvoBdSCCardType, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []EvoBdSCCardType{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with EvoBdSCCardTypeAccessor.LoadData to preload everything
func (a *EvoBdSCCardTypeAccessor) GroupData() {
	a._dataCardBuffItemBgBig = map[string]EvoBdSCCardType{}
	a._dataCardBuffItemBgMid = map[string]EvoBdSCCardType{}
	a._dataCardBuffItemBgSmall = map[string]EvoBdSCCardType{}
	for _, d := range a._data {
		a._dataCardBuffItemBgBig[d.CardBuffItemBgBig] = d
		a._dataCardBuffItemBgMid[d.CardBuffItemBgMid] = d
		a._dataCardBuffItemBgSmall[d.CardBuffItemBgSmall] = d
	}
}

// ByCardBuffItemBgBig returns the EvoBdSCCardType uniquely identified by CardBuffItemBgBig
//
// Error is only non-nil if the source errors out
func (a *EvoBdSCCardTypeAccessor) ByCardBuffItemBgBig(identifier string) (EvoBdSCCardType, error) {
	if a._dataCardBuffItemBgBig == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return EvoBdSCCardType{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCardBuffItemBgBig[identifier], nil
}

// ByCardBuffItemBgMid returns the EvoBdSCCardType uniquely identified by CardBuffItemBgMid
//
// Error is only non-nil if the source errors out
func (a *EvoBdSCCardTypeAccessor) ByCardBuffItemBgMid(identifier string) (EvoBdSCCardType, error) {
	if a._dataCardBuffItemBgMid == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return EvoBdSCCardType{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCardBuffItemBgMid[identifier], nil
}

// ByCardBuffItemBgSmall returns the EvoBdSCCardType uniquely identified by CardBuffItemBgSmall
//
// Error is only non-nil if the source errors out
func (a *EvoBdSCCardTypeAccessor) ByCardBuffItemBgSmall(identifier string) (EvoBdSCCardType, error) {
	if a._dataCardBuffItemBgSmall == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return EvoBdSCCardType{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCardBuffItemBgSmall[identifier], nil
}
