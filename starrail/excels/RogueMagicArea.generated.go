package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueMagicArea struct {
	AreaGroupID               string                                   `json:"AreaGroupID"`
	AreaID                    json.Number                              `json:"AreaID"`
	AreaIndex                 json.Number                              `json:"AreaIndex"`
	AreaNameID                map[string]json.Number                   `json:"AreaNameID"`
	CustomStageDisplayIcon    string                                   `json:"CustomStageDisplayIcon"`
	CustomStageDisplayParams  []RogueMagicAreaCustomStageDisplayParams `json:"CustomStageDisplayParams"`
	DefaultStyle              string                                   `json:"DefaultStyle"`
	DifficultyIDList          []json.Number                            `json:"DifficultyIDList"`
	ExtraLayerID              json.Number                              `json:"ExtraLayerID"`
	FirstReward               json.Number                              `json:"FirstReward"`
	IsHard                    bool                                     `json:"IsHard"`
	LayerIDList               []json.Number                            `json:"LayerIDList"`
	UnlockID                  json.Number                              `json:"UnlockID"`
	WorldLevel2DisplayMonster []map[string]json.Number                 `json:"WorldLevel2DisplayMonster"`
}
type RogueMagicAreaCustomStageDisplayParams struct {
	HMCDHMFHABF string `json:"HMCDHMFHABF"`
	PICHIHHCOCB string `json:"PICHIHHCOCB"`
}
type RogueMagicAreaAccessor struct {
	_data []RogueMagicArea
}

// LoadData retrieves the data. Must be called before RogueMagicArea.GroupData
func (a *RogueMagicAreaAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueMagicArea.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueMagicAreaAccessor) Raw() ([]RogueMagicArea, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueMagicArea{}, err
		}
	}
	return a._data, nil
}
