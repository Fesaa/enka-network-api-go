package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueEscapeLaser struct {
	GameTimeperRound json.Number   `json:"GameTimeperRound"`
	ParamGroupID     json.Number   `json:"ParamGroupID"`
	PrepareTime      json.Number   `json:"PrepareTime"`
	ScoreRange       []json.Number `json:"ScoreRange"`
	ScoreperRound    []json.Number `json:"ScoreperRound"`
	ScoreperWave     json.Number   `json:"ScoreperWave"`
	TotalRounds      json.Number   `json:"TotalRounds"`
}
type RogueEscapeLaserAccessor struct {
	_data []RogueEscapeLaser
}

// LoadData retrieves the data. Must be called before RogueEscapeLaser.GroupData
func (a *RogueEscapeLaserAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueEscapeLaser.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueEscapeLaserAccessor) Raw() ([]RogueEscapeLaser, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueEscapeLaser{}, err
		}
	}
	return a._data, nil
}
