package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type DrinkMakerRequestData struct {
	BanModeEntrance  string                 `json:"BanModeEntrance"`
	FailTip          json.Number            `json:"FailTip"`
	Mode             string                 `json:"Mode"`
	ParamList        []json.Number          `json:"ParamList"`
	RequestDesc      map[string]json.Number `json:"RequestDesc"`
	RequestID        json.Number            `json:"RequestID"`
	RequestShortDesc map[string]json.Number `json:"RequestShortDesc"`
	SuccessTip       json.Number            `json:"SuccessTip"`
}
type DrinkMakerRequestDataAccessor struct {
	_data []DrinkMakerRequestData
}

// LoadData retrieves the data. Must be called before DrinkMakerRequestData.GroupData
func (a *DrinkMakerRequestDataAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/DrinkMakerRequestData.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *DrinkMakerRequestDataAccessor) Raw() ([]DrinkMakerRequestData, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []DrinkMakerRequestData{}, err
		}
	}
	return a._data, nil
}
