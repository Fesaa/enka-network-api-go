package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueTournPermanentTalent struct {
	Cost                []map[string]json.Number `json:"Cost"`
	EffectDesc          map[string]json.Number   `json:"EffectDesc"`
	EffectDescParamList []map[string]json.Number `json:"EffectDescParamList"`
	EffectTag           map[string]json.Number   `json:"EffectTag"`
	EffectTitle         map[string]json.Number   `json:"EffectTitle"`
	Icon                string                   `json:"Icon"`
	IsImportant         bool                     `json:"IsImportant"`
	NextTalentIDList    []json.Number            `json:"NextTalentIDList"`
	TalentID            json.Number              `json:"TalentID"`
}
type RogueTournPermanentTalentAccessor struct {
	_data []RogueTournPermanentTalent
}

// LoadData retrieves the data. Must be called before RogueTournPermanentTalent.GroupData
func (a *RogueTournPermanentTalentAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueTournPermanentTalent.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueTournPermanentTalentAccessor) Raw() ([]RogueTournPermanentTalent, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueTournPermanentTalent{}, err
		}
	}
	return a._data, nil
}
