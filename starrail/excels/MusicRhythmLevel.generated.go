package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MusicRhythmLevel struct {
	Difficulty       json.Number   `json:"Difficulty"`
	EnterType        json.Number   `json:"EnterType"`
	FeverComboCount  json.Number   `json:"FeverComboCount"`
	Group            json.Number   `json:"Group"`
	ID               json.Number   `json:"ID"`
	InputScore       []json.Number `json:"InputScore"`
	StarRewardIDList []json.Number `json:"StarRewardIDList"`
	StarScoreList    []json.Number `json:"StarScoreList"`
}
type MusicRhythmLevelAccessor struct {
	_data []MusicRhythmLevel
}

// LoadData retrieves the data. Must be called before MusicRhythmLevel.GroupData
func (a *MusicRhythmLevelAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MusicRhythmLevel.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MusicRhythmLevelAccessor) Raw() ([]MusicRhythmLevel, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MusicRhythmLevel{}, err
		}
	}
	return a._data, nil
}
