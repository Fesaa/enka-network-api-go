package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueDLCArea struct {
	AreaGroupID               string                   `json:"AreaGroupID"`
	AreaID                    json.Number              `json:"AreaID"`
	AreaNameID                map[string]json.Number   `json:"AreaNameID"`
	AreaScoreMap              []map[string]json.Number `json:"AreaScoreMap"`
	Difficulty                string                   `json:"Difficulty"`
	DifficultyID              []json.Number            `json:"DifficultyID"`
	DisplayMonsterMap         map[string]json.Number   `json:"DisplayMonsterMap"`
	FirstReward               json.Number              `json:"FirstReward"`
	IsHard                    bool                     `json:"IsHard"`
	LayerIDList               []json.Number            `json:"LayerIDList"`
	MonsterEliteDropDisplayID json.Number              `json:"MonsterEliteDropDisplayID"`
	RecommendLevel            json.Number              `json:"RecommendLevel"`
	RecommendNature           []string                 `json:"RecommendNature"`
	SubType                   string                   `json:"SubType"`
	UnlockID                  json.Number              `json:"UnlockID"`
}
type RogueDLCAreaAccessor struct {
	_data []RogueDLCArea
}

// LoadData retrieves the data. Must be called before RogueDLCArea.GroupData
func (a *RogueDLCAreaAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueDLCArea.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueDLCAreaAccessor) Raw() ([]RogueDLCArea, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueDLCArea{}, err
		}
	}
	return a._data, nil
}
