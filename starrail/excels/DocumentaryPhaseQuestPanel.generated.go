package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type DocumentaryPhaseQuestPanel struct {
	ExtraQuest json.Number            `json:"ExtraQuest"`
	NextPhase  json.Number            `json:"NextPhase"`
	PanelDesc  map[string]json.Number `json:"PanelDesc"`
	PanelTitle map[string]json.Number `json:"PanelTitle"`
	PhaseID    json.Number            `json:"PhaseID"`
	QuestList  []json.Number          `json:"QuestList"`
}
type DocumentaryPhaseQuestPanelAccessor struct {
	_data []DocumentaryPhaseQuestPanel
}

// LoadData retrieves the data. Must be called before DocumentaryPhaseQuestPanel.GroupData
func (a *DocumentaryPhaseQuestPanelAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/DocumentaryPhaseQuestPanel.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *DocumentaryPhaseQuestPanelAccessor) Raw() ([]DocumentaryPhaseQuestPanel, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []DocumentaryPhaseQuestPanel{}, err
		}
	}
	return a._data, nil
}
