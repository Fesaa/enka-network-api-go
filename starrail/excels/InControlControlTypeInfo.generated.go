package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"net/http"
	"io"
	"encoding/json"
)

type InControlControlTypeInfo struct {
	ControlType          string `json:"controlType"`
	IconForSony          string `json:"iconForSony"`
	IconForSwitch        string `json:"iconForSwitch"`
	IconForXBox          string `json:"iconForXBox"`
	IsSettingControlType bool   `json:"isSettingControlType"`
}
type InControlControlTypeInfoAccessor struct {
	_data            []InControlControlTypeInfo
	_dataControlType map[string]InControlControlTypeInfo
}

// LoadData retrieves the data. Must be called before InControlControlTypeInfo.GroupData
func (a *InControlControlTypeInfoAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/InControlControlTypeInfo.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *InControlControlTypeInfoAccessor) Raw() ([]InControlControlTypeInfo, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []InControlControlTypeInfo{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with InControlControlTypeInfoAccessor.LoadData to preload everything
func (a *InControlControlTypeInfoAccessor) GroupData() {
	a._dataControlType = map[string]InControlControlTypeInfo{}
	for _, d := range a._data {
		a._dataControlType[d.ControlType] = d
	}
}

// BycontrolType returns the InControlControlTypeInfo uniquely identified by controlType
//
// Error is only non-nil if the source errors out
func (a *InControlControlTypeInfoAccessor) BycontrolType(identifier string) (InControlControlTypeInfo, error) {
	if a._dataControlType == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return InControlControlTypeInfo{}, err
			}
		}
		a.GroupData()
	}
	return a._dataControlType[identifier], nil
}
