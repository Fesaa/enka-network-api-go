package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type SwordTrainingPowerRank struct {
	PowerRequire     json.Number            `json:"PowerRequire"`
	RankGroupID      json.Number            `json:"RankGroupID"`
	RankGroupName    map[string]json.Number `json:"RankGroupName"`
	RankID           json.Number            `json:"RankID"`
	RankIcon         string                 `json:"RankIcon"`
	RankProgressName map[string]json.Number `json:"RankProgressName"`
	RankSubName      map[string]json.Number `json:"RankSubName"`
	UnlockID         json.Number            `json:"UnlockID"`
}
type SwordTrainingPowerRankAccessor struct {
	_data []SwordTrainingPowerRank
}

// LoadData retrieves the data. Must be called before SwordTrainingPowerRank.GroupData
func (a *SwordTrainingPowerRankAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SwordTrainingPowerRank.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SwordTrainingPowerRankAccessor) Raw() ([]SwordTrainingPowerRank, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SwordTrainingPowerRank{}, err
		}
	}
	return a._data, nil
}
