package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type SwordTrainingPowerRank struct {
	PowerRequire     float64   `json:"PowerRequire"`
	RankGroupID      float64   `json:"RankGroupID"`
	RankGroupName    hash.Hash `json:"RankGroupName"`
	RankID           float64   `json:"RankID"`
	RankIcon         string    `json:"RankIcon"`
	RankProgressName hash.Hash `json:"RankProgressName"`
	RankSubName      hash.Hash `json:"RankSubName"`
	UnlockID         float64   `json:"UnlockID"`
}
type SwordTrainingPowerRankAccessor struct {
	_data       []SwordTrainingPowerRank
	_dataRankID map[float64]SwordTrainingPowerRank
}

// LoadData retrieves the data. Must be called before SwordTrainingPowerRank.GroupData
func (a *SwordTrainingPowerRankAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SwordTrainingPowerRank.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SwordTrainingPowerRankAccessor) Raw() ([]SwordTrainingPowerRank, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SwordTrainingPowerRank{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with SwordTrainingPowerRankAccessor.LoadData to preload everything
func (a *SwordTrainingPowerRankAccessor) GroupData() {
	for _, d := range a._data {
		a._dataRankID[d.RankID] = d
	}
}

// ByRankID returns the SwordTrainingPowerRank uniquely identified by RankID
//
// Error is only non-nil if the source errors out
func (a *SwordTrainingPowerRankAccessor) ByRankID(identifier float64) (SwordTrainingPowerRank, error) {
	if a._dataRankID == nil {
		err := a.LoadData()
		if err != nil {
			return SwordTrainingPowerRank{}, err
		}
		a.GroupData()
	}
	return a._dataRankID[identifier], nil
}
