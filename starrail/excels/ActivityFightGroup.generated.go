package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ActivityFightGroup struct {
	ActivityFightGroupID       json.Number            `json:"ActivityFightGroupID"`
	ActivityFightGroupIconPath string                 `json:"ActivityFightGroupIconPath"`
	BattleAreaGroupID          json.Number            `json:"BattleAreaGroupID"`
	BattleAreaID               json.Number            `json:"BattleAreaID"`
	FightStageDesc             map[string]json.Number `json:"FightStageDesc"`
	FightStageTitle            map[string]json.Number `json:"FightStageTitle"`
	FloorID                    json.Number            `json:"FloorID"`
	PlaneID                    json.Number            `json:"PlaneID"`
	SpecialAvatarID            json.Number            `json:"SpecialAvatarID"`
}
type ActivityFightGroupAccessor struct {
	_data []ActivityFightGroup
}

// LoadData retrieves the data. Must be called before ActivityFightGroup.GroupData
func (a *ActivityFightGroupAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ActivityFightGroup.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ActivityFightGroupAccessor) Raw() ([]ActivityFightGroup, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ActivityFightGroup{}, err
		}
	}
	return a._data, nil
}
