package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RelicComposeConfig struct {
	CoinCost          json.Number              `json:"CoinCost"`
	ID                json.Number              `json:"ID"`
	ItemID            json.Number              `json:"ItemID"`
	MaterialCost      []map[string]json.Number `json:"MaterialCost"`
	Order             json.Number              `json:"Order"`
	Type              json.Number              `json:"Type"`
	WorldLevelRequire json.Number              `json:"WorldLevelRequire"`
}
type RelicComposeConfigAccessor struct {
	_data []RelicComposeConfig
}

// LoadData retrieves the data. Must be called before RelicComposeConfig.GroupData
func (a *RelicComposeConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RelicComposeConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RelicComposeConfigAccessor) Raw() ([]RelicComposeConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RelicComposeConfig{}, err
		}
	}
	return a._data, nil
}
