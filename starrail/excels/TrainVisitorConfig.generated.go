package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type TrainVisitorConfig struct {
	AvatarID               json.Number            `json:"AvatarID"`
	LockMissionID          json.Number            `json:"LockMissionID"`
	MessageCome            map[string]json.Number `json:"MessageCome"`
	MessageLeave           map[string]json.Number `json:"MessageLeave"`
	MessageResident        map[string]json.Number `json:"MessageResident"`
	MissionID              json.Number            `json:"MissionID"`
	ToastFinishMainMission bool                   `json:"ToastFinishMainMission"`
	VisitorID              json.Number            `json:"VisitorID"`
}
type TrainVisitorConfigAccessor struct {
	_data []TrainVisitorConfig
}

// LoadData retrieves the data. Must be called before TrainVisitorConfig.GroupData
func (a *TrainVisitorConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainVisitorConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainVisitorConfigAccessor) Raw() ([]TrainVisitorConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainVisitorConfig{}, err
		}
	}
	return a._data, nil
}
