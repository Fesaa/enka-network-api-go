package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type TrainPartyProgress struct {
	CoinRatio              json.Number            `json:"CoinRatio"`
	InitialStatExp         json.Number            `json:"InitialStatExp"`
	PassengerUnlockActPath string                 `json:"PassengerUnlockActPath"`
	ProgressID             json.Number            `json:"ProgressID"`
	ProgressTitle          map[string]json.Number `json:"ProgressTitle"`
	StatRatio              json.Number            `json:"StatRatio"`
	TeamIDList             []json.Number          `json:"TeamIDList"`
	UnlcokRequireArea      json.Number            `json:"UnlcokRequireArea"`
	UnlockPassengerList    []json.Number          `json:"UnlockPassengerList"`
}
type TrainPartyProgressAccessor struct {
	_data []TrainPartyProgress
}

// LoadData retrieves the data. Must be called before TrainPartyProgress.GroupData
func (a *TrainPartyProgressAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TrainPartyProgress.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TrainPartyProgressAccessor) Raw() ([]TrainPartyProgress, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TrainPartyProgress{}, err
		}
	}
	return a._data, nil
}
