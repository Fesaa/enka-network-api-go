package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MazePuzzle struct {
	IsResetable    json.Number   `json:"IsResetable"`
	IsShowToast    bool          `json:"IsShowToast"`
	IsShowWaypoint bool          `json:"IsShowWaypoint"`
	IsTopPriority  bool          `json:"IsTopPriority"`
	MazePuzzleID   json.Number   `json:"MazePuzzleID"`
	NormalModeID   json.Number   `json:"NormalModeID"`
	ProgressList   []json.Number `json:"ProgressList"`
	SpecialModeID  json.Number   `json:"SpecialModeID"`
	TutorialID     json.Number   `json:"TutorialID"`
}
type MazePuzzleAccessor struct {
	_data []MazePuzzle
}

// LoadData retrieves the data. Must be called before MazePuzzle.GroupData
func (a *MazePuzzleAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MazePuzzle.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MazePuzzleAccessor) Raw() ([]MazePuzzle, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MazePuzzle{}, err
		}
	}
	return a._data, nil
}
