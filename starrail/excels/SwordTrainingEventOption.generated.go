package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type SwordTrainingEventOption struct {
	EffectIDList []json.Number          `json:"EffectIDList"`
	OptionDesc   map[string]json.Number `json:"OptionDesc"`
	OptionID     json.Number            `json:"OptionID"`
	ResultAudio  string                 `json:"ResultAudio"`
	ResultDesc   map[string]json.Number `json:"ResultDesc"`
	ResultImage  string                 `json:"ResultImage"`
}
type SwordTrainingEventOptionAccessor struct {
	_data []SwordTrainingEventOption
}

// LoadData retrieves the data. Must be called before SwordTrainingEventOption.GroupData
func (a *SwordTrainingEventOptionAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SwordTrainingEventOption.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SwordTrainingEventOptionAccessor) Raw() ([]SwordTrainingEventOption, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SwordTrainingEventOption{}, err
		}
	}
	return a._data, nil
}
