package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type MazePuzzleWolfBro struct {
	ControlGroupID     json.Number   `json:"ControlGroupID"`
	FloorID            json.Number   `json:"FloorID"`
	GroupIDList        []json.Number `json:"GroupIDList"`
	MonsterGroupIDList []json.Number `json:"MonsterGroupIDList"`
	PlaneID            json.Number   `json:"PlaneID"`
	StartState         json.Number   `json:"StartState"`
	WolfBroID          json.Number   `json:"WolfBroID"`
}
type MazePuzzleWolfBroAccessor struct {
	_data          []MazePuzzleWolfBro
	_dataWolfBroID map[json.Number]MazePuzzleWolfBro
}

// LoadData retrieves the data. Must be called before MazePuzzleWolfBro.GroupData
func (a *MazePuzzleWolfBroAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MazePuzzleWolfBro.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MazePuzzleWolfBroAccessor) Raw() ([]MazePuzzleWolfBro, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MazePuzzleWolfBro{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with MazePuzzleWolfBroAccessor.LoadData to preload everything
func (a *MazePuzzleWolfBroAccessor) GroupData() {
	a._dataWolfBroID = map[json.Number]MazePuzzleWolfBro{}
	for _, d := range a._data {
		a._dataWolfBroID[d.WolfBroID] = d
	}
}

// ByWolfBroID returns the MazePuzzleWolfBro uniquely identified by WolfBroID
//
// Error is only non-nil if the source errors out
func (a *MazePuzzleWolfBroAccessor) ByWolfBroID(identifier json.Number) (MazePuzzleWolfBro, error) {
	if a._dataWolfBroID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return MazePuzzleWolfBro{}, err
			}
		}
		a.GroupData()
	}
	return a._dataWolfBroID[identifier], nil
}
