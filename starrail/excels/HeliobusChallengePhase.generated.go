package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type HeliobusChallengePhase struct {
	ChallengeGroupList   []json.Number          `json:"ChallengeGroupList"`
	ChallengePhaseID     json.Number            `json:"ChallengePhaseID"`
	ChallengePhaseName   map[string]json.Number `json:"ChallengePhaseName"`
	ChallengePhaseUnlock map[string]json.Number `json:"ChallengePhaseUnlock"`
	MapEntranceID        json.Number            `json:"MapEntranceID"`
	MappingInfoID        json.Number            `json:"MappingInfoID"`
	UnlockMissionID      json.Number            `json:"UnlockMissionID"`
}
type HeliobusChallengePhaseAccessor struct {
	_data []HeliobusChallengePhase
}

// LoadData retrieves the data. Must be called before HeliobusChallengePhase.GroupData
func (a *HeliobusChallengePhaseAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/HeliobusChallengePhase.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *HeliobusChallengePhaseAccessor) Raw() ([]HeliobusChallengePhase, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []HeliobusChallengePhase{}, err
		}
	}
	return a._data, nil
}
