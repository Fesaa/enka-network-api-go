package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type ClockParkEffect struct {
	DiceParam                   float64   `json:"DiceParam"`
	EffectID                    float64   `json:"EffectID"`
	EffectType                  string    `json:"EffectType"`
	Param1                      float64   `json:"Param1"`
	Param2                      float64   `json:"Param2"`
	Param3                      float64   `json:"Param3"`
	ParamList                   []float64 `json:"ParamList"`
	PlayCardEffectDesc          hash.Hash `json:"PlayCardEffectDesc"`
	PlayCardEffectDescParamList []float64 `json:"PlayCardEffectDescParamList"`
}
type ClockParkEffectAccessor struct {
	_data []ClockParkEffect
}

// LoadData retrieves the data. Must be called before ClockParkEffect.GroupData
func (a *ClockParkEffectAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ClockParkEffect.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ClockParkEffectAccessor) Raw() ([]ClockParkEffect, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ClockParkEffect{}, err
		}
	}
	return a._data, nil
}
