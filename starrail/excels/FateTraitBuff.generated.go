package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type FateTraitBuff struct {
	BBPDKIIGIAM hash.Hash    `json:"BBPDKIIGIAM"`
	BOPFKOKBGMP hash.Hash    `json:"BOPFKOKBGMP"`
	EAMAJGPCGFD string       `json:"EAMAJGPCGFD"`
	FCMAGJBLGOJ string       `json:"FCMAGJBLGOJ"`
	IILPOJFMPMD hash.Hash    `json:"IILPOJFMPMD"`
	IIMNAKFLOEH float64      `json:"IIMNAKFLOEH"`
	INKBBCOILNL string       `json:"INKBBCOILNL"`
	NGFFANDGNIL float64      `json:"NGFFANDGNIL"`
	OBBJIMJCCNO float64      `json:"OBBJIMJCCNO"`
	OIEKCNPMDFC []hash.Value `json:"OIEKCNPMDFC"`
	OLOJLHEKOPO []float64    `json:"OLOJLHEKOPO"`
}
type FateTraitBuffAccessor struct {
	_data            []FateTraitBuff
	_dataIIMNAKFLOEH map[float64]FateTraitBuff
}

// LoadData retrieves the data. Must be called before FateTraitBuff.GroupData
func (a *FateTraitBuffAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/FateTraitBuff.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *FateTraitBuffAccessor) Raw() ([]FateTraitBuff, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []FateTraitBuff{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with FateTraitBuffAccessor.LoadData to preload everything
func (a *FateTraitBuffAccessor) GroupData() {
	a._dataIIMNAKFLOEH = map[float64]FateTraitBuff{}
	for _, d := range a._data {
		a._dataIIMNAKFLOEH[d.IIMNAKFLOEH] = d
	}
}

// ByIIMNAKFLOEH returns the FateTraitBuff uniquely identified by IIMNAKFLOEH
//
// Error is only non-nil if the source errors out
func (a *FateTraitBuffAccessor) ByIIMNAKFLOEH(identifier float64) (FateTraitBuff, error) {
	if a._dataIIMNAKFLOEH == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return FateTraitBuff{}, err
			}
		}
		a.GroupData()
	}
	return a._dataIIMNAKFLOEH[identifier], nil
}
