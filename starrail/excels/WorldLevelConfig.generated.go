package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type WorldLevelConfig struct {
	Breaktips1         map[string]json.Number `json:"Breaktips1"`
	Breaktips2         map[string]json.Number `json:"Breaktips2"`
	Level              json.Number            `json:"Level"`
	LevelUpMission     json.Number            `json:"LevelUpMission"`
	LevelUpMissionTips map[string]json.Number `json:"LevelUpMissionTips"`
	MaxPlayerLevel     json.Number            `json:"MaxPlayerLevel"`
}
type WorldLevelConfigAccessor struct {
	_data []WorldLevelConfig
}

// LoadData retrieves the data. Must be called before WorldLevelConfig.GroupData
func (a *WorldLevelConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/WorldLevelConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *WorldLevelConfigAccessor) Raw() ([]WorldLevelConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []WorldLevelConfig{}, err
		}
	}
	return a._data, nil
}
