package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type QuestData struct {
	FinishWayID     json.Number            `json:"FinishWayID"`
	GotoID          json.Number            `json:"GotoID"`
	ImagePath       string                 `json:"ImagePath"`
	QuestDisplay    map[string]json.Number `json:"QuestDisplay"`
	QuestID         json.Number            `json:"QuestID"`
	QuestTitle      map[string]json.Number `json:"QuestTitle"`
	QuestType       json.Number            `json:"QuestType"`
	RewardID        json.Number            `json:"RewardID"`
	UnlockParamList []json.Number          `json:"UnlockParamList"`
	UnlockType      string                 `json:"UnlockType"`
}
type QuestDataAccessor struct {
	_data []QuestData
}

// LoadData retrieves the data. Must be called before QuestData.GroupData
func (a *QuestDataAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/QuestData.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *QuestDataAccessor) Raw() ([]QuestData, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []QuestData{}, err
		}
	}
	return a._data, nil
}
