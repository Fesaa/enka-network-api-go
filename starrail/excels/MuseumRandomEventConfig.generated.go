package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MuseumRandomEventConfig struct {
	Event                map[string]json.Number `json:"Event"`
	EventTitle           map[string]json.Number `json:"EventTitle"`
	EventType            string                 `json:"EventType"`
	EventTypeParameter   []json.Number          `json:"EventTypeParameter"`
	RandomEventID        json.Number            `json:"RandomEventID"`
	TriggerTypeParameter []json.Number          `json:"TriggerTypeParameter"`
}
type MuseumRandomEventConfigAccessor struct {
	_data []MuseumRandomEventConfig
}

// LoadData retrieves the data. Must be called before MuseumRandomEventConfig.GroupData
func (a *MuseumRandomEventConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MuseumRandomEventConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MuseumRandomEventConfigAccessor) Raw() ([]MuseumRandomEventConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MuseumRandomEventConfig{}, err
		}
	}
	return a._data, nil
}
