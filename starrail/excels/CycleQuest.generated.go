package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type CycleQuest struct {
	ActivityModuleID json.Number   `json:"ActivityModuleID"`
	CycleID          json.Number   `json:"CycleID"`
	Cycledays        json.Number   `json:"Cycledays"`
	FinishedTimes    json.Number   `json:"FinishedTimes"`
	IsNonPeriodic    bool          `json:"IsNonPeriodic"`
	MaxLevel         json.Number   `json:"MaxLevel"`
	MinLevel         json.Number   `json:"MinLevel"`
	QuestList        []json.Number `json:"QuestList"`
	ScheduleDataID   json.Number   `json:"ScheduleDataID"`
	WeekDayList      []json.Number `json:"WeekDayList"`
}
type CycleQuestAccessor struct {
	_data        []CycleQuest
	_dataCycleID map[json.Number]CycleQuest
}

// LoadData retrieves the data. Must be called before CycleQuest.GroupData
func (a *CycleQuestAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/CycleQuest.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *CycleQuestAccessor) Raw() ([]CycleQuest, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []CycleQuest{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with CycleQuestAccessor.LoadData to preload everything
func (a *CycleQuestAccessor) GroupData() {
	a._dataCycleID = map[json.Number]CycleQuest{}
	for _, d := range a._data {
		a._dataCycleID[d.CycleID] = d
	}
}

// ByCycleID returns the CycleQuest uniquely identified by CycleID
//
// Error is only non-nil if the source errors out
func (a *CycleQuestAccessor) ByCycleID(identifier json.Number) (CycleQuest, error) {
	if a._dataCycleID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return CycleQuest{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCycleID[identifier], nil
}
