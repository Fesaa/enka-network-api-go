package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type CycleQuest struct {
	ActivityModuleID json.Number   `json:"ActivityModuleID"`
	CycleID          json.Number   `json:"CycleID"`
	Cycledays        json.Number   `json:"Cycledays"`
	FinishedTimes    json.Number   `json:"FinishedTimes"`
	IsNonPeriodic    bool          `json:"IsNonPeriodic"`
	MaxLevel         json.Number   `json:"MaxLevel"`
	MinLevel         json.Number   `json:"MinLevel"`
	QuestList        []json.Number `json:"QuestList"`
	ScheduleDataID   json.Number   `json:"ScheduleDataID"`
	WeekDayList      []json.Number `json:"WeekDayList"`
}
type CycleQuestAccessor struct {
	_data []CycleQuest
}

// LoadData retrieves the data. Must be called before CycleQuest.GroupData
func (a *CycleQuestAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/CycleQuest.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *CycleQuestAccessor) Raw() ([]CycleQuest, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []CycleQuest{}, err
		}
	}
	return a._data, nil
}
