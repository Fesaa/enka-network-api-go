package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type TarotBookInteraction struct {
	FinishConditionList []TarotBookInteractionFinishConditionList `json:"FinishConditionList"`
	ID                  json.Number                               `json:"ID"`
	JsonPath            string                                    `json:"JsonPath"`
	Priority            json.Number                               `json:"Priority"`
	StartConditionList  []TarotBookInteractionStartConditionList  `json:"StartConditionList"`
}
type TarotBookInteractionFinishConditionList struct {
	Param string `json:"Param"`
	Type  string `json:"Type"`
}
type TarotBookInteractionStartConditionList struct {
	Param string `json:"Param"`
	Type  string `json:"Type"`
}
type TarotBookInteractionAccessor struct {
	_data         []TarotBookInteraction
	_dataJsonPath map[string]TarotBookInteraction
}

// LoadData retrieves the data. Must be called before TarotBookInteraction.GroupData
func (a *TarotBookInteractionAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/TarotBookInteraction.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *TarotBookInteractionAccessor) Raw() ([]TarotBookInteraction, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []TarotBookInteraction{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with TarotBookInteractionAccessor.LoadData to preload everything
func (a *TarotBookInteractionAccessor) GroupData() {
	a._dataJsonPath = map[string]TarotBookInteraction{}
	for _, d := range a._data {
		a._dataJsonPath[d.JsonPath] = d
	}
}

// ByJsonPath returns the TarotBookInteraction uniquely identified by JsonPath
//
// Error is only non-nil if the source errors out
func (a *TarotBookInteractionAccessor) ByJsonPath(identifier string) (TarotBookInteraction, error) {
	if a._dataJsonPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return TarotBookInteraction{}, err
			}
		}
		a.GroupData()
	}
	return a._dataJsonPath[identifier], nil
}
