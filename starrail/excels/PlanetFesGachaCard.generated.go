package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"net/http"
	"io"
)

type PlanetFesGachaCard struct {
	CardThemeID  json.Number   `json:"CardThemeID"`
	GachaID      json.Number   `json:"GachaID"`
	UnlockIDList []json.Number `json:"UnlockIDList"`
}
type PlanetFesGachaCardAccessor struct {
	_data            []PlanetFesGachaCard
	_dataCardThemeID map[json.Number]PlanetFesGachaCard
	_dataGachaID     map[json.Number]PlanetFesGachaCard
}

// LoadData retrieves the data. Must be called before PlanetFesGachaCard.GroupData
func (a *PlanetFesGachaCardAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PlanetFesGachaCard.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PlanetFesGachaCardAccessor) Raw() ([]PlanetFesGachaCard, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PlanetFesGachaCard{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with PlanetFesGachaCardAccessor.LoadData to preload everything
func (a *PlanetFesGachaCardAccessor) GroupData() {
	a._dataCardThemeID = map[json.Number]PlanetFesGachaCard{}
	a._dataGachaID = map[json.Number]PlanetFesGachaCard{}
	for _, d := range a._data {
		a._dataCardThemeID[d.CardThemeID] = d
		a._dataGachaID[d.GachaID] = d
	}
}

// ByCardThemeID returns the PlanetFesGachaCard uniquely identified by CardThemeID
//
// Error is only non-nil if the source errors out
func (a *PlanetFesGachaCardAccessor) ByCardThemeID(identifier json.Number) (PlanetFesGachaCard, error) {
	if a._dataCardThemeID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return PlanetFesGachaCard{}, err
			}
		}
		a.GroupData()
	}
	return a._dataCardThemeID[identifier], nil
}

// ByGachaID returns the PlanetFesGachaCard uniquely identified by GachaID
//
// Error is only non-nil if the source errors out
func (a *PlanetFesGachaCardAccessor) ByGachaID(identifier json.Number) (PlanetFesGachaCard, error) {
	if a._dataGachaID == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return PlanetFesGachaCard{}, err
			}
		}
		a.GroupData()
	}
	return a._dataGachaID[identifier], nil
}
