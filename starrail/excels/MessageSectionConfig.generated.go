package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MessageSectionConfig struct {
	ID                     json.Number   `json:"ID"`
	IsPerformMessage       bool          `json:"IsPerformMessage"`
	MainMissionLink        json.Number   `json:"MainMissionLink"`
	StartMessageItemIDList []json.Number `json:"StartMessageItemIDList"`
}
type MessageSectionConfigAccessor struct {
	_data []MessageSectionConfig
}

// LoadData retrieves the data. Must be called before MessageSectionConfig.GroupData
func (a *MessageSectionConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MessageSectionConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MessageSectionConfigAccessor) Raw() ([]MessageSectionConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MessageSectionConfig{}, err
		}
	}
	return a._data, nil
}
