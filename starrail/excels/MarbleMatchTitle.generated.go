package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MarbleMatchTitle struct {
	CompareValue json.Number            `json:"CompareValue"`
	Condition    string                 `json:"Condition"`
	Desc         map[string]json.Number `json:"Desc"`
	ID           json.Number            `json:"ID"`
	Name         map[string]json.Number `json:"Name"`
	PVPScore     json.Number            `json:"PVPScore"`
	Param        []json.Number          `json:"Param"`
	Priority     json.Number            `json:"Priority"`
	Quality      json.Number            `json:"Quality"`
	ValueType    string                 `json:"ValueType"`
}
type MarbleMatchTitleAccessor struct {
	_data []MarbleMatchTitle
}

// LoadData retrieves the data. Must be called before MarbleMatchTitle.GroupData
func (a *MarbleMatchTitleAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MarbleMatchTitle.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MarbleMatchTitleAccessor) Raw() ([]MarbleMatchTitle, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MarbleMatchTitle{}, err
		}
	}
	return a._data, nil
}
