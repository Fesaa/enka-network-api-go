package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueNousMainStory struct {
	DisplayID              []json.Number          `json:"DisplayID"`
	Layer                  json.Number            `json:"Layer"`
	MainStoryName          map[string]json.Number `json:"MainStoryName"`
	QuestID                json.Number            `json:"QuestID"`
	RogueNPCID             json.Number            `json:"RogueNPCID"`
	StoryGroup             json.Number            `json:"StoryGroup"`
	StoryID                json.Number            `json:"StoryID"`
	TriggerCondition       map[string]json.Number `json:"TriggerCondition"`
	UnlockConditionDisplay json.Number            `json:"UnlockConditionDisplay"`
}
type RogueNousMainStoryAccessor struct {
	_data []RogueNousMainStory
}

// LoadData retrieves the data. Must be called before RogueNousMainStory.GroupData
func (a *RogueNousMainStoryAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueNousMainStory.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueNousMainStoryAccessor) Raw() ([]RogueNousMainStory, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueNousMainStory{}, err
		}
	}
	return a._data, nil
}
