package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ProgramGroupConfig struct {
	Asset          string      `json:"Asset"`
	Duration       json.Number `json:"Duration"`
	ID             json.Number `json:"ID"`
	IfAnAsset      string      `json:"IfAnAsset"`
	Order          json.Number `json:"Order"`
	PlayType       json.Number `json:"PlayType"`
	ProgramGroupID json.Number `json:"ProgramGroupID"`
	SoundEvent     string      `json:"SoundEvent"`
}
type ProgramGroupConfigAccessor struct {
	_data []ProgramGroupConfig
}

// LoadData retrieves the data. Must be called before ProgramGroupConfig.GroupData
func (a *ProgramGroupConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ProgramGroupConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ProgramGroupConfigAccessor) Raw() ([]ProgramGroupConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ProgramGroupConfig{}, err
		}
	}
	return a._data, nil
}
