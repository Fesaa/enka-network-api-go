package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type AvatarServantSkillConfig struct {
	AttackType              string          `json:"AttackType"`
	BPNeed                  hash.IntValue   `json:"BPNeed"`
	DelayRatio              hash.IntValue   `json:"DelayRatio"`
	ExtraEffectIDList       []float64       `json:"ExtraEffectIDList"`
	HideInUI                bool            `json:"HideInUI"`
	Level                   float64         `json:"Level"`
	MaxLevel                float64         `json:"MaxLevel"`
	ParamList               []hash.IntValue `json:"ParamList"`
	RatedRankID             []float64       `json:"RatedRankID"`
	RatedSkillTreeID        []float64       `json:"RatedSkillTreeID"`
	SPBase                  hash.IntValue   `json:"SPBase"`
	SPMultipleRatio         hash.IntValue   `json:"SPMultipleRatio"`
	ShowStanceList          []hash.IntValue `json:"ShowStanceList"`
	SimpleExtraEffectIDList []float64       `json:"SimpleExtraEffectIDList"`
	SimpleParamList         []hash.IntValue `json:"SimpleParamList"`
	SimpleSkillDesc         hash.Hash       `json:"SimpleSkillDesc"`
	SkillDesc               hash.Hash       `json:"SkillDesc"`
	SkillEffect             string          `json:"SkillEffect"`
	SkillID                 float64         `json:"SkillID"`
	SkillIcon               string          `json:"SkillIcon"`
	SkillName               hash.Hash       `json:"SkillName"`
	SkillNeed               hash.Hash       `json:"SkillNeed"`
	SkillTag                hash.Hash       `json:"SkillTag"`
	SkillTriggerKey         string          `json:"SkillTriggerKey"`
	SkillTypeDesc           hash.Hash       `json:"SkillTypeDesc"`
	StanceDamageDisplay     float64         `json:"StanceDamageDisplay"`
	StanceDamageType        string          `json:"StanceDamageType"`
	UltraSkillIcon          string          `json:"UltraSkillIcon"`
}
type AvatarServantSkillConfigAccessor struct {
	_data []AvatarServantSkillConfig
}

// LoadData retrieves the data. Must be called before AvatarServantSkillConfig.GroupData
func (a *AvatarServantSkillConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarServantSkillConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarServantSkillConfigAccessor) Raw() ([]AvatarServantSkillConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarServantSkillConfig{}, err
		}
		a.GroupData()
	}
	return a._data, nil
}
