package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type AmphoreusCurioUIConfig struct {
	Desc          map[string]json.Number   `json:"Desc"`
	ID            json.Number              `json:"ID"`
	IconPath      string                   `json:"IconPath"`
	Name          map[string]json.Number   `json:"Name"`
	NameAfter     map[string]json.Number   `json:"NameAfter"`
	ReplyIDList   []json.Number            `json:"ReplyIDList"`
	Tag           json.Number              `json:"Tag"`
	TextmapIDList []map[string]json.Number `json:"TextmapIDList"`
}
type AmphoreusCurioUIConfigAccessor struct {
	_data         []AmphoreusCurioUIConfig
	_dataIconPath map[string]AmphoreusCurioUIConfig
}

// LoadData retrieves the data. Must be called before AmphoreusCurioUIConfig.GroupData
func (a *AmphoreusCurioUIConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AmphoreusCurioUIConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AmphoreusCurioUIConfigAccessor) Raw() ([]AmphoreusCurioUIConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AmphoreusCurioUIConfig{}, err
		}
	}
	return a._data, nil
}

// GroupData groups the data by their unique ids.
// Can be called manually in conjunction with AmphoreusCurioUIConfigAccessor.LoadData to preload everything
func (a *AmphoreusCurioUIConfigAccessor) GroupData() {
	a._dataIconPath = map[string]AmphoreusCurioUIConfig{}
	for _, d := range a._data {
		a._dataIconPath[d.IconPath] = d
	}
}

// ByIconPath returns the AmphoreusCurioUIConfig uniquely identified by IconPath
//
// Error is only non-nil if the source errors out
func (a *AmphoreusCurioUIConfigAccessor) ByIconPath(identifier string) (AmphoreusCurioUIConfig, error) {
	if a._dataIconPath == nil {
		if a._data == nil {
			err := a.LoadData()
			if err != nil {
				return AmphoreusCurioUIConfig{}, err
			}
		}
		a.GroupData()
	}
	return a._dataIconPath[identifier], nil
}
