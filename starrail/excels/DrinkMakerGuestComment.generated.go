package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type DrinkMakerGuestComment struct {
	CommentContent       map[string]json.Number `json:"CommentContent"`
	CommentID            json.Number            `json:"CommentID"`
	GuestID              json.Number            `json:"GuestID"`
	IconPath             string                 `json:"IconPath"`
	SatisfyTriggerType   string                 `json:"SatisfyTriggerType"`
	TriggerTypeParamList []json.Number          `json:"TriggerTypeParamList"`
	Type                 string                 `json:"Type"`
	Weight               json.Number            `json:"Weight"`
}
type DrinkMakerGuestCommentAccessor struct {
	_data []DrinkMakerGuestComment
}

// LoadData retrieves the data. Must be called before DrinkMakerGuestComment.GroupData
func (a *DrinkMakerGuestCommentAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/DrinkMakerGuestComment.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *DrinkMakerGuestCommentAccessor) Raw() ([]DrinkMakerGuestComment, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []DrinkMakerGuestComment{}, err
		}
	}
	return a._data, nil
}
