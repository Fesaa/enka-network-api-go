package// Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"github.com/Fesaa/enka-network-api-go/hash"
	"net/http"
	"io"
	"encoding/json"
)

type AvatarSkillConfigLD struct {
	AttackType              string        `json:"AttackType"`
	BPAdd                   hash.Value    `json:"BPAdd"`
	BPNeed                  hash.Value    `json:"BPNeed"`
	CoolDown                float64       `json:"CoolDown"`
	DelayRatio              hash.Value    `json:"DelayRatio"`
	ExtraEffectIDList       []float64     `json:"ExtraEffectIDList"`
	HideInUI                bool          `json:"HideInUI"`
	InitCoolDown            float64       `json:"InitCoolDown"`
	Level                   float64       `json:"Level"`
	LevelUpCostList         []interface{} `json:"LevelUpCostList"`
	MaxLevel                float64       `json:"MaxLevel"`
	ParamList               []hash.Value  `json:"ParamList"`
	RatedRankID             []float64     `json:"RatedRankID"`
	RatedSkillTreeID        []float64     `json:"RatedSkillTreeID"`
	SPBase                  hash.Value    `json:"SPBase"`
	SPMultipleRatio         hash.Value    `json:"SPMultipleRatio"`
	SPNeed                  hash.Value    `json:"SPNeed"`
	ShowDamageList          []interface{} `json:"ShowDamageList"`
	ShowHealList            []interface{} `json:"ShowHealList"`
	ShowStanceList          []hash.Value  `json:"ShowStanceList"`
	SimpleExtraEffectIDList []float64     `json:"SimpleExtraEffectIDList"`
	SimpleParamList         []hash.Value  `json:"SimpleParamList"`
	SimpleSkillDesc         hash.Hash     `json:"SimpleSkillDesc"`
	SkillDesc               hash.Hash     `json:"SkillDesc"`
	SkillEffect             string        `json:"SkillEffect"`
	SkillID                 float64       `json:"SkillID"`
	SkillIcon               string        `json:"SkillIcon"`
	SkillName               hash.Hash     `json:"SkillName"`
	SkillTag                hash.Hash     `json:"SkillTag"`
	SkillTriggerKey         string        `json:"SkillTriggerKey"`
	SkillTypeDesc           hash.Hash     `json:"SkillTypeDesc"`
	StanceDamageDisplay     float64       `json:"StanceDamageDisplay"`
	StanceDamageType        string        `json:"StanceDamageType"`
	UltraSkillIcon          string        `json:"UltraSkillIcon"`
}
type AvatarSkillConfigLDAccessor struct {
	_data []AvatarSkillConfigLD
}

// LoadData retrieves the data. Must be called before AvatarSkillConfigLD.GroupData
func (a *AvatarSkillConfigLDAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/AvatarSkillConfigLD.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *AvatarSkillConfigLDAccessor) Raw() ([]AvatarSkillConfigLD, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []AvatarSkillConfigLD{}, err
		}
	}
	return a._data, nil
}
