package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type RogueTournKeyword struct {
	ExtraEffect        json.Number   `json:"ExtraEffect"`
	KeywordBuffType    json.Number   `json:"KeywordBuffType"`
	KeywordExtraEffect json.Number   `json:"KeywordExtraEffect"`
	KeywordID          json.Number   `json:"KeywordID"`
	KeywordIcon        string        `json:"KeywordIcon"`
	MazeBuffID         json.Number   `json:"MazeBuffID"`
	MazeBuffList       []json.Number `json:"MazeBuffList"`
	RogueFormulaList   []json.Number `json:"RogueFormulaList"`
}
type RogueTournKeywordAccessor struct {
	_data []RogueTournKeyword
}

// LoadData retrieves the data. Must be called before RogueTournKeyword.GroupData
func (a *RogueTournKeywordAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/RogueTournKeyword.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *RogueTournKeywordAccessor) Raw() ([]RogueTournKeyword, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []RogueTournKeyword{}, err
		}
	}
	return a._data, nil
}
