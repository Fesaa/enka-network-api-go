package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MonopolyBuffConfig struct {
	BuffDesc    map[string]json.Number `json:"BuffDesc"`
	BuffID      json.Number            `json:"BuffID"`
	BuffName    map[string]json.Number `json:"BuffName"`
	Duration    json.Number            `json:"Duration"`
	EffectID    json.Number            `json:"EffectID"`
	IconPath    string                 `json:"IconPath"`
	IsPermanent bool                   `json:"IsPermanent"`
	Rank        json.Number            `json:"Rank"`
}
type MonopolyBuffConfigAccessor struct {
	_data []MonopolyBuffConfig
}

// LoadData retrieves the data. Must be called before MonopolyBuffConfig.GroupData
func (a *MonopolyBuffConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MonopolyBuffConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MonopolyBuffConfigAccessor) Raw() ([]MonopolyBuffConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MonopolyBuffConfig{}, err
		}
	}
	return a._data, nil
}
