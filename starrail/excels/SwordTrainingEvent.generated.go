package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type SwordTrainingEvent struct {
	EventID        json.Number            `json:"EventID"`
	EventImage     string                 `json:"EventImage"`
	OptionIDList   []json.Number          `json:"OptionIDList"`
	TalkEventText1 map[string]json.Number `json:"TalkEventText1"`
	TalkEventText2 map[string]json.Number `json:"TalkEventText2"`
	TalkEventText3 map[string]json.Number `json:"TalkEventText3"`
}
type SwordTrainingEventAccessor struct {
	_data []SwordTrainingEvent
}

// LoadData retrieves the data. Must be called before SwordTrainingEvent.GroupData
func (a *SwordTrainingEventAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/SwordTrainingEvent.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *SwordTrainingEventAccessor) Raw() ([]SwordTrainingEvent, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []SwordTrainingEvent{}, err
		}
	}
	return a._data, nil
}
