package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MazePlane struct {
	FloorIDList  []json.Number          `json:"FloorIDList"`
	MazePoolType json.Number            `json:"MazePoolType"`
	PlaneID      json.Number            `json:"PlaneID"`
	PlaneName    map[string]json.Number `json:"PlaneName"`
	PlaneType    string                 `json:"PlaneType"`
	StartFloorID json.Number            `json:"StartFloorID"`
	SubType      json.Number            `json:"SubType"`
	WorldID      json.Number            `json:"WorldID"`
}
type MazePlaneAccessor struct {
	_data []MazePlane
}

// LoadData retrieves the data. Must be called before MazePlane.GroupData
func (a *MazePlaneAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MazePlane.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MazePlaneAccessor) Raw() ([]MazePlane, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MazePlane{}, err
		}
	}
	return a._data, nil
}
