package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type PerformanceE struct {
	ChangePlayerType     string      `json:"ChangePlayerType"`
	EndBlack             string      `json:"EndBlack"`
	EndWithCrack         bool        `json:"EndWithCrack"`
	FloorID              json.Number `json:"FloorID"`
	IsIntroDialogue      bool        `json:"IsIntroDialogue"`
	IsSkip               string      `json:"IsSkip"`
	PerformanceCharacter string      `json:"PerformanceCharacter"`
	PerformanceID        json.Number `json:"PerformanceID"`
	PerformancePath      string      `json:"PerformancePath"`
	PlaneID              json.Number `json:"PlaneID"`
	StartBlack           string      `json:"StartBlack"`
}
type PerformanceEAccessor struct {
	_data []PerformanceE
}

// LoadData retrieves the data. Must be called before PerformanceE.GroupData
func (a *PerformanceEAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/PerformanceE.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *PerformanceEAccessor) Raw() ([]PerformanceE, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []PerformanceE{}, err
		}
	}
	return a._data, nil
}
