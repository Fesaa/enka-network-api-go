package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type ClockParkCheckPoint struct {
	CheckFailTextList []map[string]json.Number `json:"CheckFailTextList"`
	CheckParam1       json.Number              `json:"CheckParam1"`
	CheckParam2       json.Number              `json:"CheckParam2"`
	CheckParam3       json.Number              `json:"CheckParam3"`
	CheckPoint        map[string]json.Number   `json:"CheckPoint"`
	CheckPointID      json.Number              `json:"CheckPointID"`
	CheckPointType    string                   `json:"CheckPointType"`
	CheckWinTextList  []map[string]json.Number `json:"CheckWinTextList"`
}
type ClockParkCheckPointAccessor struct {
	_data []ClockParkCheckPoint
}

// LoadData retrieves the data. Must be called before ClockParkCheckPoint.GroupData
func (a *ClockParkCheckPointAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/ClockParkCheckPoint.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *ClockParkCheckPointAccessor) Raw() ([]ClockParkCheckPoint, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []ClockParkCheckPoint{}, err
		}
	}
	return a._data, nil
}
