package // Generated by Yoitsu. DO NOT EDIT!
excels

import (
	"encoding/json"
	"io"
	"net/http"
)

type MonsterTemplateConfig struct {
	AIPath               string                   `json:"AIPath"`
	AISkillSequence      []map[string]json.Number `json:"AISkillSequence"`
	AtlasSortID          json.Number              `json:"AtlasSortID"`
	AttackBase           map[string]json.Number   `json:"AttackBase"`
	CriticalDamageBase   map[string]json.Number   `json:"CriticalDamageBase"`
	DefenceBase          map[string]json.Number   `json:"DefenceBase"`
	HPBase               map[string]json.Number   `json:"HPBase"`
	IconPath             string                   `json:"IconPath"`
	ImagePath            string                   `json:"ImagePath"`
	InitialDelayRatio    map[string]json.Number   `json:"InitialDelayRatio"`
	JsonConfig           string                   `json:"JsonConfig"`
	ManikinConfigPath    string                   `json:"ManikinConfigPath"`
	ManikinImagePath     string                   `json:"ManikinImagePath"`
	ManikinPrefabPath    string                   `json:"ManikinPrefabPath"`
	MinimumFatigueRatio  map[string]json.Number   `json:"MinimumFatigueRatio"`
	MonsterBaseType      string                   `json:"MonsterBaseType"`
	MonsterCampID        json.Number              `json:"MonsterCampID"`
	MonsterName          map[string]json.Number   `json:"MonsterName"`
	MonsterTemplateID    json.Number              `json:"MonsterTemplateID"`
	NPCMonsterList       []json.Number            `json:"NPCMonsterList"`
	NatureID             json.Number              `json:"NatureID"`
	PrefabPath           string                   `json:"PrefabPath"`
	Rank                 string                   `json:"Rank"`
	RoundIconPath        string                   `json:"RoundIconPath"`
	SpeedBase            map[string]json.Number   `json:"SpeedBase"`
	SpeedModifyValue     map[string]json.Number   `json:"SpeedModifyValue"`
	StanceBase           map[string]json.Number   `json:"StanceBase"`
	StanceCount          json.Number              `json:"StanceCount"`
	StanceModifyValue    map[string]json.Number   `json:"StanceModifyValue"`
	StanceType           string                   `json:"StanceType"`
	StatusResistanceBase map[string]json.Number   `json:"StatusResistanceBase"`
	TemplateGroupID      json.Number              `json:"TemplateGroupID"`
}
type MonsterTemplateConfigAccessor struct {
	_data []MonsterTemplateConfig
}

// LoadData retrieves the data. Must be called before MonsterTemplateConfig.GroupData
func (a *MonsterTemplateConfigAccessor) LoadData() error {
	res, err := http.Get("https://gitlab.com/Dimbreath/turnbasedgamedata/-/raw/main/ExcelOutput/MonsterTemplateConfig.json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	data, err := io.ReadAll(res.Body)
	if err != nil {
		return err
	}
	return json.Unmarshal(data, &a._data)
}

// Raw returns the raw data.
func (a *MonsterTemplateConfigAccessor) Raw() ([]MonsterTemplateConfig, error) {
	if a._data == nil {
		err := a.LoadData()
		if err != nil {
			return []MonsterTemplateConfig{}, err
		}
	}
	return a._data, nil
}
